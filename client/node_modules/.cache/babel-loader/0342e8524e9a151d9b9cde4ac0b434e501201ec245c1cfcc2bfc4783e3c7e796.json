{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import{Form,Button,Modal}from'react-bootstrap';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ForgotPassword(){const[userIdOrEmail,setUserIdOrEmail]=useState('');const[newPassword,setNewPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[showSuccessPopup,setShowSuccessPopup]=useState(false);const[showErrorPopup,setShowErrorPopup]=useState(false);const[popupMessage,setPopupMessage]=useState('');const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();if(newPassword!==confirmPassword){setPopupMessage('Passwords do not match');setShowErrorPopup(true);return;}try{const response=await axios.post('http://localhost:5000/api/forgot-password',{userIdOrEmail,newPassword},{headers:{'Content-Type':'application/json'}});setPopupMessage(response.data.msg);setShowSuccessPopup(true);setTimeout(()=>{setShowSuccessPopup(false);navigate('/');},2000);}catch(err){var _err$response,_err$response$data;console.error('Forgot password error:',err);setPopupMessage(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.msg)||'Password reset failed. Please try again.');setShowErrorPopup(true);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Forgot Password\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"User ID or Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:userIdOrEmail,onChange:e=>setUserIdOrEmail(e.target.value),placeholder:\"Enter User ID or Email\",required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"New Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",value:newPassword,onChange:e=>setNewPassword(e.target.value),placeholder:\"Enter new password\",required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),placeholder:\"Re-enter new password\",required:true})]}),/*#__PURE__*/_jsx(Button,{className:\"btn-primary\",type:\"submit\",children:\"Reset Password\"})]}),/*#__PURE__*/_jsxs(Modal,{show:showSuccessPopup,onHide:()=>setShowSuccessPopup(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Success\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:popupMessage}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>setShowSuccessPopup(false),children:\"Close\"})})]}),/*#__PURE__*/_jsxs(Modal,{show:showErrorPopup,onHide:()=>setShowErrorPopup(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Error\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:popupMessage}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>setShowErrorPopup(false),children:\"Close\"})})]})]});}export default ForgotPassword;","map":{"version":3,"names":["React","useState","useNavigate","axios","Form","Button","Modal","jsx","_jsx","jsxs","_jsxs","ForgotPassword","userIdOrEmail","setUserIdOrEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","showSuccessPopup","setShowSuccessPopup","showErrorPopup","setShowErrorPopup","popupMessage","setPopupMessage","navigate","handleSubmit","e","preventDefault","response","post","headers","data","msg","setTimeout","err","_err$response","_err$response$data","console","error","className","children","onSubmit","Group","Label","Control","type","value","onChange","target","placeholder","required","show","onHide","Header","closeButton","Title","Body","Footer","variant","onClick"],"sources":["C:/lab/2ndsem/frontendlab/project/attendance-system/client/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Form, Button, Modal } from 'react-bootstrap';\r\n\r\nfunction ForgotPassword() {\r\n  const [userIdOrEmail, setUserIdOrEmail] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\r\n  const [showErrorPopup, setShowErrorPopup] = useState(false);\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newPassword !== confirmPassword) {\r\n      setPopupMessage('Passwords do not match');\r\n      setShowErrorPopup(true);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/forgot-password', {\r\n        userIdOrEmail,\r\n        newPassword\r\n      }, {\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      setPopupMessage(response.data.msg);\r\n      setShowSuccessPopup(true);\r\n      setTimeout(() => {\r\n        setShowSuccessPopup(false);\r\n        navigate('/');\r\n      }, 2000);\r\n    } catch (err) {\r\n      console.error('Forgot password error:', err);\r\n      setPopupMessage(err.response?.data?.msg || 'Password reset failed. Please try again.');\r\n      setShowErrorPopup(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-content\">\r\n      <h2>Forgot Password</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"form-group\">\r\n          <Form.Label>User ID or Email</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={userIdOrEmail}\r\n            onChange={(e) => setUserIdOrEmail(e.target.value)}\r\n            placeholder=\"Enter User ID or Email\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"form-group\">\r\n          <Form.Label>New Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            placeholder=\"Enter new password\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"form-group\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            placeholder=\"Re-enter new password\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"btn-primary\" type=\"submit\">\r\n          Reset Password\r\n        </Button>\r\n      </Form>\r\n\r\n      <Modal show={showSuccessPopup} onHide={() => setShowSuccessPopup(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Success</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{popupMessage}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={() => setShowSuccessPopup(false)}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={showErrorPopup} onHide={() => setShowErrorPopup(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Error</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{popupMessage}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={() => setShowErrorPopup(false)}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}