{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Form,Button,Table,Modal,Card,Alert,Tab,Tabs}from'react-bootstrap';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);function FacultyDashboard(_ref){let{user,setUser}=_ref;const[sections,setSections]=useState([]);const[selectedSection,setSelectedSection]=useState('');const[selectedSubject,setSelectedSubject]=useState('');const[selectedDate,setSelectedDate]=useState(new Date().toISOString().split('T')[0]);const[students,setStudents]=useState([]);const[attendance,setAttendance]=useState({});const[summary,setSummary]=useState({present:0,absent:0});const[message,setMessage]=useState('');const[showModal,setShowModal]=useState(false);const[schedule,setSchedule]=useState([]);const[newSchedule,setNewSchedule]=useState({day:'',time:'',subject:'',section:''});const[editScheduleId,setEditScheduleId]=useState(null);const[attendanceHistory,setAttendanceHistory]=useState([]);const[analytics,setAnalytics]=useState({});const[notifications,setNotifications]=useState([]);const[profile,setProfile]=useState({name:user.name,email:user.email,profilePicture:user.profilePicture||''});const[showProfileModal,setShowProfileModal]=useState(false);const[announcements,setAnnouncements]=useState([]);const[newAnnouncement,setNewAnnouncement]=useState({title:'',content:''});const[file,setFile]=useState(null);const[showUploadModal,setShowUploadModal]=useState(false);useEffect(()=>{const fetchSections=async()=>{try{const res=await axios.get('http://localhost:5000/api/sections');setSections(res.data);}catch(err){var _err$response,_err$response$data;addNotification('Failed to fetch sections: '+(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.msg)||err.message),'error');}};const fetchSchedule=async()=>{try{const res=await axios.get('http://localhost:5000/api/schedule');setSchedule(res.data);}catch(err){var _err$response2,_err$response2$data;addNotification('Failed to fetch schedule: '+(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.msg)||err.message),'error');}};const fetchAttendanceHistory=async()=>{try{const res=await axios.get('http://localhost:5000/api/attendance');setAttendanceHistory(res.data);}catch(err){var _err$response3,_err$response3$data;addNotification('Failed to fetch attendance history: '+(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.msg)||err.message),'error');}};const fetchAnnouncements=async()=>{try{const res=await axios.get('http://localhost:5000/api/announcements');setAnnouncements(res.data);}catch(err){var _err$response4,_err$response4$data;addNotification('Failed to fetch announcements: '+(((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.msg)||err.message),'error');}};fetchSections();fetchSchedule();fetchAttendanceHistory();fetchAnnouncements();},[]);const addNotification=function(msg){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'success';const id=Date.now();setNotifications(prev=>[...prev,{id,msg,type}]);setTimeout(()=>{setNotifications(prev=>prev.filter(n=>n.id!==id));},5000);};const handleFilter=async()=>{try{const studentRes=await axios.get(`http://localhost:5000/api/users?section=${selectedSection}`);setStudents(studentRes.data);setSummary({present:0,absent:0});setAttendance({});const dateAttendanceRes=await axios.get(`http://localhost:5000/api/attendance?date=${selectedDate}&section=${selectedSection}`);const initialAttendance=dateAttendanceRes.data.reduce((acc,record)=>{acc[record.studentId]=record.status;return acc;},{});setAttendance(initialAttendance);updateSummary(initialAttendance);const startDate=new Date(selectedDate);startDate.setDate(startDate.getDate()-30);const analyticsRes=await axios.get(`http://localhost:5000/api/attendance?section=${selectedSection}&startDate=${startDate.toISOString()}&endDate=${selectedDate}`);const analyticsData=analyticsRes.data.reduce((acc,record)=>{acc[record.studentId]=acc[record.studentId]||{present:0,absent:0};acc[record.studentId][record.status]++;return acc;},{});setAnalytics(analyticsData);}catch(err){var _err$response5,_err$response5$data;addNotification('Failed to filter students: '+(((_err$response5=err.response)===null||_err$response5===void 0?void 0:(_err$response5$data=_err$response5.data)===null||_err$response5$data===void 0?void 0:_err$response5$data.msg)||err.message),'error');}};const updateSummary=attendanceData=>{const count={present:0,absent:0};Object.values(attendanceData).forEach(status=>{if(status==='present')count.present++;if(status==='absent')count.absent++;});setSummary(count);};const handleAttendanceChange=(studentId,status)=>{setAttendance(prev=>{const newAttendance={...prev,[studentId]:status};updateSummary(newAttendance);return newAttendance;});};const submitAttendance=async()=>{// Validate required fields\nif(!selectedSection||!selectedDate){addNotification('Please select a section and date before submitting.','error');return;}if(Object.keys(attendance).length===0){addNotification('No attendance data to submit.','error');return;}try{const subject=selectedSubject||user.subject||'Default Subject';// Fallback for subject\nconst attendancePromises=Object.entries(attendance).map(async _ref2=>{let[studentId,status]=_ref2;try{// Check for existing record with proper query parameters\nconst existingRes=await axios.get(`http://localhost:5000/api/attendance?studentId=${studentId}&date=${selectedDate}&section=${selectedSection}`);const existingRecord=existingRes.data[0];const payload={studentId,section:selectedSection,subject,status,date:selectedDate};if(existingRecord){// Update existing record\nreturn axios.put(`http://localhost:5000/api/attendance/${existingRecord._id}`,payload);}else{// Create new record\nreturn axios.post('http://localhost:5000/api/attendance',payload);}}catch(err){var _err$response6,_err$response6$data;throw new Error(`Failed for student ${studentId}: ${((_err$response6=err.response)===null||_err$response6===void 0?void 0:(_err$response6$data=_err$response6.data)===null||_err$response6$data===void 0?void 0:_err$response6$data.msg)||err.message}`);}});// Execute all attendance submissions concurrently\nawait Promise.all(attendancePromises);// Refresh attendance history and reset state\nconst historyRes=await axios.get('http://localhost:5000/api/attendance');setAttendanceHistory(historyRes.data);setAttendance({});// Clear attendance state\nsetSummary({present:0,absent:0});// Reset summary\naddNotification('Attendance submitted successfully!','success');}catch(err){addNotification(`Failed to submit attendance: ${err.message}`,'error');}};const exportAttendance=()=>{const csv=[['Student ID','Name','Section','Status','Date','Time'],...students.map(student=>[student.studentId,student.name,student.section,attendance[student.studentId]||'N/A',selectedDate,new Date().toLocaleTimeString()])].map(row=>row.join(',')).join('\\n');const blob=new Blob([csv],{type:'text/csv'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=`attendance_${selectedSection}_${selectedDate}.csv`;a.click();window.URL.revokeObjectURL(url);addNotification('Attendance exported successfully!');};const handleCreateSchedule=async e=>{e.preventDefault();try{await axios.post('http://localhost:5000/api/schedule',newSchedule);setNewSchedule({day:'',time:'',subject:'',section:''});const res=await axios.get('http://localhost:5000/api/schedule');setSchedule(res.data);addNotification('Schedule created successfully!');}catch(err){var _err$response7,_err$response7$data;addNotification('Failed to create schedule: '+(((_err$response7=err.response)===null||_err$response7===void 0?void 0:(_err$response7$data=_err$response7.data)===null||_err$response7$data===void 0?void 0:_err$response7$data.msg)||err.message),'error');}};const handleEditSchedule=id=>{const scheduleToEdit=schedule.find(s=>s._id===id);setNewSchedule({day:scheduleToEdit.day,time:scheduleToEdit.time,subject:scheduleToEdit.subject,section:scheduleToEdit.section});setEditScheduleId(id);};const handleUpdateSchedule=async e=>{e.preventDefault();try{await axios.put(`http://localhost:5000/api/schedule/${editScheduleId}`,newSchedule);setNewSchedule({day:'',time:'',subject:'',section:''});setEditScheduleId(null);const res=await axios.get('http://localhost:5000/api/schedule');setSchedule(res.data);addNotification('Schedule updated successfully!');}catch(err){var _err$response8,_err$response8$data;addNotification('Failed to update schedule: '+(((_err$response8=err.response)===null||_err$response8===void 0?void 0:(_err$response8$data=_err$response8.data)===null||_err$response8$data===void 0?void 0:_err$response8$data.msg)||err.message),'error');}};const handleDeleteSchedule=async id=>{try{await axios.delete(`http://localhost:5000/api/schedule/${id}`);const res=await axios.get('http://localhost:5000/api/schedule');setSchedule(res.data);addNotification('Schedule deleted successfully!');}catch(err){var _err$response9,_err$response9$data;addNotification('Failed to delete schedule: '+(((_err$response9=err.response)===null||_err$response9===void 0?void 0:(_err$response9$data=_err$response9.data)===null||_err$response9$data===void 0?void 0:_err$response9$data.msg)||err.message),'error');}};const handleProfileUpdate=async e=>{e.preventDefault();try{const updatedUser={...user,name:profile.name,email:profile.email,profilePicture:profile.profilePicture};localStorage.setItem('user',JSON.stringify(updatedUser));setUser(updatedUser);setShowProfileModal(false);addNotification('Profile updated successfully!');}catch(err){var _err$response10,_err$response10$data;addNotification('Failed to update profile: '+(((_err$response10=err.response)===null||_err$response10===void 0?void 0:(_err$response10$data=_err$response10.data)===null||_err$response10$data===void 0?void 0:_err$response10$data.msg)||err.message),'error');}};const handleProfilePictureChange=e=>{const file=e.target.files[0];if(file){const reader=new FileReader();reader.onloadend=()=>{setProfile({...profile,profilePicture:reader.result});};reader.readAsDataURL(file);}};const handleCreateAnnouncement=async e=>{e.preventDefault();try{await axios.post('http://localhost:5000/api/announcements',{...newAnnouncement,facultyId:user._id});setNewAnnouncement({title:'',content:''});const res=await axios.get('http://localhost:5000/api/announcements');setAnnouncements(res.data);addNotification('Announcement posted successfully!');}catch(err){var _err$response11,_err$response11$data;addNotification('Failed to post announcement: '+(((_err$response11=err.response)===null||_err$response11===void 0?void 0:(_err$response11$data=_err$response11.data)===null||_err$response11$data===void 0?void 0:_err$response11$data.msg)||err.message),'error');}};const analyticsData={labels:students.map(s=>s.name),datasets:[{label:'Present',data:students.map(s=>{var _analytics$s$studentI;return((_analytics$s$studentI=analytics[s.studentId])===null||_analytics$s$studentI===void 0?void 0:_analytics$s$studentI.present)||0;}),backgroundColor:'#d32f2f'},{label:'Absent',data:students.map(s=>{var _analytics$s$studentI2;return((_analytics$s$studentI2=analytics[s.studentId])===null||_analytics$s$studentI2===void 0?void 0:_analytics$s$studentI2.absent)||0;}),backgroundColor:'#b71c1c'}]};const handleUpload=async e=>{e.preventDefault();if(!file){addNotification('Please select a CSV file to upload.','error');return;}const formData=new FormData();formData.append('csvFile',file);formData.append('section',selectedSection);formData.append('date',selectedDate);formData.append('subject',selectedSubject||user.subject);try{const res=await axios.post('http://localhost:5000/api/attendance/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});setAttendanceHistory(res.data.updatedAttendance);addNotification('Attendance updated successfully from CSV!','success');setFile(null);setShowUploadModal(false);handleFilter();// Refresh attendance data\n}catch(err){var _err$response12,_err$response12$data;addNotification('Failed to upload CSV: '+(((_err$response12=err.response)===null||_err$response12===void 0?void 0:(_err$response12$data=_err$response12.data)===null||_err$response12$data===void 0?void 0:_err$response12$data.msg)||err.message),'error');}};const handleFileChange=e=>{setFile(e.target.files[0]);};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-content\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Welcome, \",user.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Subject:\"}),\" \",user.subject]}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",className:\"mb-3\",onClick:()=>setShowProfileModal(true),children:\"Edit Profile\"}),notifications.map(notif=>/*#__PURE__*/_jsx(Alert,{variant:notif.type==='success'?'success':'danger',onClose:()=>setNotifications(prev=>prev.filter(n=>n.id!==notif.id)),dismissible:true,children:notif.msg},notif.id)),/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"attendance\",className:\"mb-4\",children:[/*#__PURE__*/_jsx(Tab,{eventKey:\"attendance\",title:\"Mark Attendance\",children:/*#__PURE__*/_jsx(Card,{className:\"mb-4\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Attendance Management\"}),/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(Form.Group,{className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Date\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"date\",value:selectedDate,onChange:e=>setSelectedDate(e.target.value),required:true})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(Form.Group,{className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Section\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",value:selectedSection,onChange:e=>setSelectedSection(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Section\"}),sections.map(sec=>/*#__PURE__*/_jsx(\"option\",{value:sec,children:sec},sec))]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(Form.Group,{className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Subject\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",value:selectedSubject,onChange:e=>setSelectedSubject(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Subject\"}),/*#__PURE__*/_jsx(\"option\",{value:user.subject,children:user.subject}),schedule.filter(s=>s.section===selectedSection).map(s=>s.subject!==user.subject?/*#__PURE__*/_jsx(\"option\",{value:s.subject,children:s.subject},s._id):null)]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsx(Button,{className:\"btn-danger me-2\",onClick:handleFilter,children:\"Filter Students\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",className:\"ms-2\",onClick:()=>setShowUploadModal(true),children:\"Upload Attendance CSV\"})]})]}),students.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"mt-4\",children:[\"Mark Attendance for \",new Date(selectedDate).toLocaleDateString()]}),/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Student ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Section\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:students.map(student=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:student.studentId}),/*#__PURE__*/_jsx(\"td\",{children:student.name}),/*#__PURE__*/_jsx(\"td\",{children:student.section}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Present\",name:`attendance-${student._id}`,checked:attendance[student.studentId]==='present',onChange:()=>handleAttendanceChange(student.studentId,'present')}),/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Absent\",name:`attendance-${student._id}`,checked:attendance[student.studentId]==='absent',onChange:()=>handleAttendanceChange(student.studentId,'absent')})]})]},student._id))})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Summary:\"}),\" Present - \",summary.present,\", Absent - \",summary.absent]}),/*#__PURE__*/_jsx(Button,{className:\"btn-danger me-2\",onClick:submitAttendance,children:\"Submit Attendance\"}),/*#__PURE__*/_jsx(Button,{className:\"btn-danger\",onClick:exportAttendance,children:\"Export to CSV\"})]})]})})}),/*#__PURE__*/_jsx(Tab,{eventKey:\"schedule\",title:\"Manage Schedule\",children:/*#__PURE__*/_jsx(Card,{className:\"mb-4\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Class Schedule\"}),/*#__PURE__*/_jsxs(Table,{className:\"schedule-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Day\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Subject\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Section\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:schedule.map(classItem=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:classItem.day}),/*#__PURE__*/_jsx(\"td\",{children:classItem.time}),/*#__PURE__*/_jsx(\"td\",{children:classItem.subject}),/*#__PURE__*/_jsx(\"td\",{children:classItem.section}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(Button,{variant:\"warning\",onClick:()=>handleEditSchedule(classItem._id),className:\"me-2\",children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:()=>handleDeleteSchedule(classItem._id),children:\"Delete\"})]})]},classItem._id))})]}),/*#__PURE__*/_jsxs(Form,{onSubmit:editScheduleId?handleUpdateSchedule:handleCreateSchedule,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(Form.Group,{className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Day\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",value:newSchedule.day,onChange:e=>setNewSchedule({...newSchedule,day:e.target.value}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Day\"}),['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'].map(day=>/*#__PURE__*/_jsx(\"option\",{value:day,children:day},day))]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(Form.Group,{className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Time\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:newSchedule.time,onChange:e=>setNewSchedule({...newSchedule,time:e.target.value}),placeholder:\"e.g., 10:00 AM - 11:30 AM\",required:true})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(Form.Group,{className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Subject\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:newSchedule.subject,onChange:e=>setNewSchedule({...newSchedule,subject:e.target.value}),placeholder:\"Enter subject\",required:true})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(Form.Group,{className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Section\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",value:newSchedule.section,onChange:e=>setNewSchedule({...newSchedule,section:e.target.value}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Section\"}),sections.map(sec=>/*#__PURE__*/_jsx(\"option\",{value:sec,children:sec},sec))]})]})})]}),/*#__PURE__*/_jsx(Button,{className:\"btn-danger\",type:\"submit\",children:editScheduleId?'Update Schedule':'Add Schedule'})]})]})})}),/*#__PURE__*/_jsx(Tab,{eventKey:\"analytics\",title:\"Analytics\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Attendance Analytics\"}),Object.keys(analytics).length>0&&/*#__PURE__*/_jsx(Bar,{data:analyticsData,options:{responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:'30-Day Attendance Analytics'}}}})]})})}),/*#__PURE__*/_jsx(Tab,{eventKey:\"announcements\",title:\"Announcements\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Post Announcement\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleCreateAnnouncement,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Title\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:newAnnouncement.title,onChange:e=>setNewAnnouncement({...newAnnouncement,title:e.target.value}),placeholder:\"Enter announcement title\",required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Content\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:4,value:newAnnouncement.content,onChange:e=>setNewAnnouncement({...newAnnouncement,content:e.target.value}),placeholder:\"Enter announcement content\",required:true})]}),/*#__PURE__*/_jsx(Button,{className:\"btn-danger\",type:\"submit\",children:\"Post Announcement\"})]}),/*#__PURE__*/_jsx(\"h4\",{className:\"mt-4\",children:\"Recent Announcements\"}),announcements.length>0?/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Content\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:announcements.map(ann=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:ann.title}),/*#__PURE__*/_jsx(\"td\",{children:ann.content}),/*#__PURE__*/_jsx(\"td\",{children:new Date(ann.createdAt).toLocaleDateString()})]},ann._id))})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No announcements available.\"})]})})})]}),/*#__PURE__*/_jsxs(Modal,{show:showModal,onHide:()=>setShowModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:message.includes('successfully')?'Success':'Error'})}),/*#__PURE__*/_jsx(Modal.Body,{children:message}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(Button,{className:\"btn-danger\",onClick:()=>setShowModal(false),children:\"Close\"})})]}),/*#__PURE__*/_jsxs(Modal,{show:showProfileModal,onHide:()=>setShowProfileModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Edit Profile\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleProfileUpdate,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:profile.name,onChange:e=>setProfile({...profile,name:e.target.value}),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",value:profile.email,onChange:e=>setProfile({...profile,email:e.target.value}),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Profile Picture\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",accept:\"image/*\",onChange:handleProfilePictureChange}),profile.profilePicture&&/*#__PURE__*/_jsx(\"img\",{src:profile.profilePicture,alt:\"Profile\",className:\"profile-picture-preview\",style:{maxWidth:'100px',marginTop:'10px'}})]}),/*#__PURE__*/_jsx(Button,{className:\"btn-danger\",type:\"submit\",children:\"Save Changes\"})]})})]}),/*#__PURE__*/_jsxs(Modal,{show:showUploadModal,onHide:()=>setShowUploadModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Upload Attendance CSV\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleUpload,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"CSV File\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",accept:\".csv\",onChange:handleFileChange,required:true}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"Upload a CSV file with columns: studentId, date, status (e.g., present/absent).\"})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",className:\"btn-primary\",children:\"Upload\"})]})})]})]});}export default FacultyDashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","Form","Button","Table","Modal","Card","Alert","Tab","Tabs","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","register","FacultyDashboard","_ref","user","setUser","sections","setSections","selectedSection","setSelectedSection","selectedSubject","setSelectedSubject","selectedDate","setSelectedDate","Date","toISOString","split","students","setStudents","attendance","setAttendance","summary","setSummary","present","absent","message","setMessage","showModal","setShowModal","schedule","setSchedule","newSchedule","setNewSchedule","day","time","subject","section","editScheduleId","setEditScheduleId","attendanceHistory","setAttendanceHistory","analytics","setAnalytics","notifications","setNotifications","profile","setProfile","name","email","profilePicture","showProfileModal","setShowProfileModal","announcements","setAnnouncements","newAnnouncement","setNewAnnouncement","title","content","file","setFile","showUploadModal","setShowUploadModal","fetchSections","res","get","data","err","_err$response","_err$response$data","addNotification","response","msg","fetchSchedule","_err$response2","_err$response2$data","fetchAttendanceHistory","_err$response3","_err$response3$data","fetchAnnouncements","_err$response4","_err$response4$data","type","arguments","length","undefined","id","now","prev","setTimeout","filter","n","handleFilter","studentRes","dateAttendanceRes","initialAttendance","reduce","acc","record","studentId","status","updateSummary","startDate","setDate","getDate","analyticsRes","analyticsData","_err$response5","_err$response5$data","attendanceData","count","Object","values","forEach","handleAttendanceChange","newAttendance","submitAttendance","keys","attendancePromises","entries","map","_ref2","existingRes","existingRecord","payload","date","put","_id","post","_err$response6","_err$response6$data","Error","Promise","all","historyRes","exportAttendance","csv","student","toLocaleTimeString","row","join","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleCreateSchedule","e","preventDefault","_err$response7","_err$response7$data","handleEditSchedule","scheduleToEdit","find","s","handleUpdateSchedule","_err$response8","_err$response8$data","handleDeleteSchedule","delete","_err$response9","_err$response9$data","handleProfileUpdate","updatedUser","localStorage","setItem","JSON","stringify","_err$response10","_err$response10$data","handleProfilePictureChange","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleCreateAnnouncement","facultyId","_err$response11","_err$response11$data","labels","datasets","label","_analytics$s$studentI","backgroundColor","_analytics$s$studentI2","handleUpload","formData","FormData","append","headers","updatedAttendance","_err$response12","_err$response12$data","handleFileChange","className","children","variant","onClick","notif","onClose","dismissible","defaultActiveKey","eventKey","Body","Group","Label","Control","value","onChange","required","as","sec","toLocaleDateString","striped","bordered","hover","Check","checked","classItem","onSubmit","placeholder","options","responsive","plugins","legend","position","display","text","rows","ann","createdAt","show","onHide","Header","closeButton","includes","Footer","accept","src","alt","style","maxWidth","marginTop","Text"],"sources":["C:/lab/2ndsem/frontendlab/project/attendance-system/client/src/components/FacultyDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Table, Modal, Card, Alert, Tab, Tabs } from 'react-bootstrap';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nfunction FacultyDashboard({ user, setUser }) {\r\n  const [sections, setSections] = useState([]);\r\n  const [selectedSection, setSelectedSection] = useState('');\r\n  const [selectedSubject, setSelectedSubject] = useState('');\r\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\r\n  const [students, setStudents] = useState([]);\r\n  const [attendance, setAttendance] = useState({});\r\n  const [summary, setSummary] = useState({ present: 0, absent: 0 });\r\n  const [message, setMessage] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [newSchedule, setNewSchedule] = useState({ day: '', time: '', subject: '', section: '' });\r\n  const [editScheduleId, setEditScheduleId] = useState(null);\r\n  const [attendanceHistory, setAttendanceHistory] = useState([]);\r\n  const [analytics, setAnalytics] = useState({});\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [profile, setProfile] = useState({ name: user.name, email: user.email, profilePicture: user.profilePicture || '' });\r\n  const [showProfileModal, setShowProfileModal] = useState(false);\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [newAnnouncement, setNewAnnouncement] = useState({ title: '', content: '' });\r\n  const [file, setFile] = useState(null);\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchSections = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/sections');\r\n        setSections(res.data);\r\n      } catch (err) {\r\n        addNotification('Failed to fetch sections: ' + (err.response?.data?.msg || err.message), 'error');\r\n      }\r\n    };\r\n    const fetchSchedule = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/schedule');\r\n        setSchedule(res.data);\r\n      } catch (err) {\r\n        addNotification('Failed to fetch schedule: ' + (err.response?.data?.msg || err.message), 'error');\r\n      }\r\n    };\r\n    const fetchAttendanceHistory = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/attendance');\r\n        setAttendanceHistory(res.data);\r\n      } catch (err) {\r\n        addNotification('Failed to fetch attendance history: ' + (err.response?.data?.msg || err.message), 'error');\r\n      }\r\n    };\r\n    const fetchAnnouncements = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/announcements');\r\n        setAnnouncements(res.data);\r\n      } catch (err) {\r\n        addNotification('Failed to fetch announcements: ' + (err.response?.data?.msg || err.message), 'error');\r\n      }\r\n    };\r\n    fetchSections();\r\n    fetchSchedule();\r\n    fetchAttendanceHistory();\r\n    fetchAnnouncements();\r\n  }, []);\r\n\r\n  const addNotification = (msg, type = 'success') => {\r\n    const id = Date.now();\r\n    setNotifications((prev) => [...prev, { id, msg, type }]);\r\n    setTimeout(() => {\r\n      setNotifications((prev) => prev.filter((n) => n.id !== id));\r\n    }, 5000);\r\n  };\r\n\r\n  const handleFilter = async () => {\r\n    try {\r\n      const studentRes = await axios.get(`http://localhost:5000/api/users?section=${selectedSection}`);\r\n      setStudents(studentRes.data);\r\n      setSummary({ present: 0, absent: 0 });\r\n      setAttendance({});\r\n\r\n      const dateAttendanceRes = await axios.get(\r\n        `http://localhost:5000/api/attendance?date=${selectedDate}&section=${selectedSection}`\r\n      );\r\n      const initialAttendance = dateAttendanceRes.data.reduce((acc, record) => {\r\n        acc[record.studentId] = record.status;\r\n        return acc;\r\n      }, {});\r\n      setAttendance(initialAttendance);\r\n      updateSummary(initialAttendance);\r\n\r\n      const startDate = new Date(selectedDate);\r\n      startDate.setDate(startDate.getDate() - 30);\r\n      const analyticsRes = await axios.get(\r\n        `http://localhost:5000/api/attendance?section=${selectedSection}&startDate=${startDate.toISOString()}&endDate=${selectedDate}`\r\n      );\r\n      const analyticsData = analyticsRes.data.reduce((acc, record) => {\r\n        acc[record.studentId] = acc[record.studentId] || { present: 0, absent: 0 };\r\n        acc[record.studentId][record.status]++;\r\n        return acc;\r\n      }, {});\r\n      setAnalytics(analyticsData);\r\n    } catch (err) {\r\n      addNotification('Failed to filter students: ' + (err.response?.data?.msg || err.message), 'error');\r\n    }\r\n  };\r\n\r\n  const updateSummary = (attendanceData) => {\r\n    const count = { present: 0, absent: 0 };\r\n    Object.values(attendanceData).forEach((status) => {\r\n      if (status === 'present') count.present++;\r\n      if (status === 'absent') count.absent++;\r\n    });\r\n    setSummary(count);\r\n  };\r\n\r\n  const handleAttendanceChange = (studentId, status) => {\r\n    setAttendance((prev) => {\r\n      const newAttendance = { ...prev, [studentId]: status };\r\n      updateSummary(newAttendance);\r\n      return newAttendance;\r\n    });\r\n  };\r\n\r\n  const submitAttendance = async () => {\r\n    // Validate required fields\r\n    if (!selectedSection || !selectedDate) {\r\n      addNotification('Please select a section and date before submitting.', 'error');\r\n      return;\r\n    }\r\n    if (Object.keys(attendance).length === 0) {\r\n      addNotification('No attendance data to submit.', 'error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const subject = selectedSubject || user.subject || 'Default Subject'; // Fallback for subject\r\n      const attendancePromises = Object.entries(attendance).map(async ([studentId, status]) => {\r\n        try {\r\n          // Check for existing record with proper query parameters\r\n          const existingRes = await axios.get(\r\n            `http://localhost:5000/api/attendance?studentId=${studentId}&date=${selectedDate}&section=${selectedSection}`\r\n          );\r\n          const existingRecord = existingRes.data[0];\r\n\r\n          const payload = {\r\n            studentId,\r\n            section: selectedSection,\r\n            subject,\r\n            status,\r\n            date: selectedDate,\r\n          };\r\n\r\n          if (existingRecord) {\r\n            // Update existing record\r\n            return axios.put(`http://localhost:5000/api/attendance/${existingRecord._id}`, payload);\r\n          } else {\r\n            // Create new record\r\n            return axios.post('http://localhost:5000/api/attendance', payload);\r\n          }\r\n        } catch (err) {\r\n          throw new Error(`Failed for student ${studentId}: ${err.response?.data?.msg || err.message}`);\r\n        }\r\n      });\r\n\r\n      // Execute all attendance submissions concurrently\r\n      await Promise.all(attendancePromises);\r\n\r\n      // Refresh attendance history and reset state\r\n      const historyRes = await axios.get('http://localhost:5000/api/attendance');\r\n      setAttendanceHistory(historyRes.data);\r\n      setAttendance({}); // Clear attendance state\r\n      setSummary({ present: 0, absent: 0 }); // Reset summary\r\n      addNotification('Attendance submitted successfully!', 'success');\r\n    } catch (err) {\r\n      addNotification(`Failed to submit attendance: ${err.message}`, 'error');\r\n    }\r\n  };\r\n\r\n  const exportAttendance = () => {\r\n    const csv = [\r\n      ['Student ID', 'Name', 'Section', 'Status', 'Date', 'Time'],\r\n      ...students.map((student) => [\r\n        student.studentId,\r\n        student.name,\r\n        student.section,\r\n        attendance[student.studentId] || 'N/A',\r\n        selectedDate,\r\n        new Date().toLocaleTimeString(),\r\n      ]),\r\n    ]\r\n      .map((row) => row.join(','))\r\n      .join('\\n');\r\n    const blob = new Blob([csv], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `attendance_${selectedSection}_${selectedDate}.csv`;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    addNotification('Attendance exported successfully!');\r\n  };\r\n\r\n  const handleCreateSchedule = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:5000/api/schedule', newSchedule);\r\n      setNewSchedule({ day: '', time: '', subject: '', section: '' });\r\n      const res = await axios.get('http://localhost:5000/api/schedule');\r\n      setSchedule(res.data);\r\n      addNotification('Schedule created successfully!');\r\n    } catch (err) {\r\n      addNotification('Failed to create schedule: ' + (err.response?.data?.msg || err.message), 'error');\r\n    }\r\n  };\r\n\r\n  const handleEditSchedule = (id) => {\r\n    const scheduleToEdit = schedule.find((s) => s._id === id);\r\n    setNewSchedule({\r\n      day: scheduleToEdit.day,\r\n      time: scheduleToEdit.time,\r\n      subject: scheduleToEdit.subject,\r\n      section: scheduleToEdit.section,\r\n    });\r\n    setEditScheduleId(id);\r\n  };\r\n\r\n  const handleUpdateSchedule = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(\r\n        `http://localhost:5000/api/schedule/${editScheduleId}`,\r\n        newSchedule\r\n      );\r\n      setNewSchedule({ day: '', time: '', subject: '', section: '' });\r\n      setEditScheduleId(null);\r\n      const res = await axios.get('http://localhost:5000/api/schedule');\r\n      setSchedule(res.data);\r\n      addNotification('Schedule updated successfully!');\r\n    } catch (err) {\r\n      addNotification('Failed to update schedule: ' + (err.response?.data?.msg || err.message), 'error');\r\n    }\r\n  };\r\n\r\n  const handleDeleteSchedule = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/schedule/${id}`);\r\n      const res = await axios.get('http://localhost:5000/api/schedule');\r\n      setSchedule(res.data);\r\n      addNotification('Schedule deleted successfully!');\r\n    } catch (err) {\r\n      addNotification('Failed to delete schedule: ' + (err.response?.data?.msg || err.message), 'error');\r\n    }\r\n  };\r\n\r\n  const handleProfileUpdate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const updatedUser = {\r\n        ...user,\r\n        name: profile.name,\r\n        email: profile.email,\r\n        profilePicture: profile.profilePicture,\r\n      };\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      setUser(updatedUser);\r\n      setShowProfileModal(false);\r\n      addNotification('Profile updated successfully!');\r\n    } catch (err) {\r\n      addNotification('Failed to update profile: ' + (err.response?.data?.msg || err.message), 'error');\r\n    }\r\n  };\r\n\r\n  const handleProfilePictureChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setProfile({ ...profile, profilePicture: reader.result });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleCreateAnnouncement = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:5000/api/announcements', {\r\n        ...newAnnouncement,\r\n        facultyId: user._id,\r\n      });\r\n      setNewAnnouncement({ title: '', content: '' });\r\n      const res = await axios.get('http://localhost:5000/api/announcements');\r\n      setAnnouncements(res.data);\r\n      addNotification('Announcement posted successfully!');\r\n    } catch (err) {\r\n      addNotification('Failed to post announcement: ' + (err.response?.data?.msg || err.message), 'error');\r\n    }\r\n  };\r\n\r\n  const analyticsData = {\r\n    labels: students.map((s) => s.name),\r\n    datasets: [\r\n      {\r\n        label: 'Present',\r\n        data: students.map((s) => analytics[s.studentId]?.present || 0),\r\n        backgroundColor: '#d32f2f',\r\n      },\r\n      {\r\n        label: 'Absent',\r\n        data: students.map((s) => analytics[s.studentId]?.absent || 0),\r\n        backgroundColor: '#b71c1c',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      addNotification('Please select a CSV file to upload.', 'error');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('csvFile', file);\r\n    formData.append('section', selectedSection);\r\n    formData.append('date', selectedDate);\r\n    formData.append('subject', selectedSubject || user.subject);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/attendance/upload', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n      setAttendanceHistory(res.data.updatedAttendance);\r\n      addNotification('Attendance updated successfully from CSV!', 'success');\r\n      setFile(null);\r\n      setShowUploadModal(false);\r\n      handleFilter(); // Refresh attendance data\r\n    } catch (err) {\r\n      addNotification('Failed to upload CSV: ' + (err.response?.data?.msg || err.message), 'error');\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-content\">\r\n      <h2>Welcome, {user.name}</h2>\r\n      <p><strong>Subject:</strong> {user.subject}</p>\r\n      <Button\r\n        variant=\"secondary\"\r\n        className=\"mb-3\"\r\n        onClick={() => setShowProfileModal(true)}\r\n      >\r\n        Edit Profile\r\n      </Button>\r\n      {notifications.map((notif) => (\r\n        <Alert\r\n          key={notif.id}\r\n          variant={notif.type === 'success' ? 'success' : 'danger'}\r\n          onClose={() => setNotifications((prev) => prev.filter((n) => n.id !== notif.id))}\r\n          dismissible\r\n        >\r\n          {notif.msg}\r\n        </Alert>\r\n      ))}\r\n      <Tabs defaultActiveKey=\"attendance\" className=\"mb-4\">\r\n        <Tab eventKey=\"attendance\" title=\"Mark Attendance\">\r\n          <Card className=\"mb-4\">\r\n            <Card.Body>\r\n              <Card.Title>Attendance Management</Card.Title>\r\n              <Form>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-4\">\r\n                    <Form.Group className=\"form-group\">\r\n                      <Form.Label>Date</Form.Label>\r\n                      <Form.Control\r\n                        type=\"date\"\r\n                        value={selectedDate}\r\n                        onChange={(e) => setSelectedDate(e.target.value)}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <Form.Group className=\"form-group\">\r\n                      <Form.Label>Section</Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={selectedSection}\r\n                        onChange={(e) => setSelectedSection(e.target.value)}\r\n                      >\r\n                        <option value=\"\">Select Section</option>\r\n                        {sections.map((sec) => (\r\n                          <option key={sec} value={sec}>\r\n                            {sec}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <Form.Group className=\"form-group\">\r\n                      <Form.Label>Subject</Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={selectedSubject}\r\n                        onChange={(e) => setSelectedSubject(e.target.value)}\r\n                      >\r\n                        <option value=\"\">Select Subject</option>\r\n                        <option value={user.subject}>{user.subject}</option>\r\n                        {schedule\r\n                          .filter((s) => s.section === selectedSection)\r\n                          .map((s) =>\r\n                            s.subject !== user.subject ? (\r\n                              <option key={s._id} value={s.subject}>\r\n                                {s.subject}\r\n                              </option>\r\n                            ) : null\r\n                          )}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                  <Button className=\"btn-danger me-2\" onClick={handleFilter}>\r\n                    Filter Students\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className=\"ms-2\"\r\n                    onClick={() => setShowUploadModal(true)}\r\n                  >\r\n                    Upload Attendance CSV\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n              {students.length > 0 && (\r\n                <>\r\n                  <h4 className=\"mt-4\">Mark Attendance for {new Date(selectedDate).toLocaleDateString()}</h4>\r\n                  <Table striped bordered hover>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Student ID</th>\r\n                        <th>Name</th>\r\n                        <th>Section</th>\r\n                        <th>Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {students.map((student) => (\r\n                        <tr key={student._id}>\r\n                          <td>{student.studentId}</td>\r\n                          <td>{student.name}</td>\r\n                          <td>{student.section}</td>\r\n                          <td>\r\n                            <Form.Check\r\n                              type=\"radio\"\r\n                              label=\"Present\"\r\n                              name={`attendance-${student._id}`}\r\n                              checked={attendance[student.studentId] === 'present'}\r\n                              onChange={() => handleAttendanceChange(student.studentId, 'present')}\r\n                            />\r\n                            <Form.Check\r\n                              type=\"radio\"\r\n                              label=\"Absent\"\r\n                              name={`attendance-${student._id}`}\r\n                              checked={attendance[student.studentId] === 'absent'}\r\n                              onChange={() => handleAttendanceChange(student.studentId, 'absent')}\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                  <p>\r\n                    <strong>Summary:</strong> Present - {summary.present}, Absent - {summary.absent}\r\n                  </p>\r\n                  <Button className=\"btn-danger me-2\" onClick={submitAttendance}>\r\n                    Submit Attendance\r\n                  </Button>\r\n                  <Button className=\"btn-danger\" onClick={exportAttendance}>\r\n                    Export to CSV\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Tab>\r\n        <Tab eventKey=\"schedule\" title=\"Manage Schedule\">\r\n          <Card className=\"mb-4\">\r\n            <Card.Body>\r\n              <Card.Title>Class Schedule</Card.Title>\r\n              <Table className=\"schedule-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Day</th>\r\n                    <th>Time</th>\r\n                    <th>Subject</th>\r\n                    <th>Section</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {schedule.map((classItem) => (\r\n                    <tr key={classItem._id}>\r\n                      <td>{classItem.day}</td>\r\n                      <td>{classItem.time}</td>\r\n                      <td>{classItem.subject}</td>\r\n                      <td>{classItem.section}</td>\r\n                      <td>\r\n                        <Button\r\n                          variant=\"warning\"\r\n                          onClick={() => handleEditSchedule(classItem._id)}\r\n                          className=\"me-2\"\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={() => handleDeleteSchedule(classItem._id)}>\r\n                          Delete\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n              <Form onSubmit={editScheduleId ? handleUpdateSchedule : handleCreateSchedule}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-3\">\r\n                    <Form.Group className=\"form-group\">\r\n                      <Form.Label>Day</Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={newSchedule.day}\r\n                        onChange={(e) =>\r\n                          setNewSchedule({ ...newSchedule, day: e.target.value })\r\n                        }\r\n                        required\r\n                      >\r\n                        <option value=\"\">Select Day</option>\r\n                        {['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map(\r\n                          (day) => (\r\n                            <option key={day} value={day}>\r\n                              {day}\r\n                            </option>\r\n                          )\r\n                        )}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-3\">\r\n                    <Form.Group className=\"form-group\">\r\n                      <Form.Label>Time</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={newSchedule.time}\r\n                        onChange={(e) =>\r\n                          setNewSchedule({ ...newSchedule, time: e.target.value })\r\n                        }\r\n                        placeholder=\"e.g., 10:00 AM - 11:30 AM\"\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-3\">\r\n                    <Form.Group className=\"form-group\">\r\n                      <Form.Label>Subject</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        value={newSchedule.subject}\r\n                        onChange={(e) =>\r\n                          setNewSchedule({ ...newSchedule, subject: e.target.value })\r\n                        }\r\n                        placeholder=\"Enter subject\"\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-3\">\r\n                    <Form.Group className=\"form-group\">\r\n                      <Form.Label>Section</Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={newSchedule.section}\r\n                        onChange={(e) =>\r\n                          setNewSchedule({ ...newSchedule, section: e.target.value })\r\n                        }\r\n                        required\r\n                      >\r\n                        <option value=\"\">Select Section</option>\r\n                        {sections.map((sec) => (\r\n                          <option key={sec} value={sec}>\r\n                            {sec}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                <Button className=\"btn-danger\" type=\"submit\">\r\n                  {editScheduleId ? 'Update Schedule' : 'Add Schedule'}\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Tab>\r\n        <Tab eventKey=\"analytics\" title=\"Analytics\">\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Attendance Analytics</Card.Title>\r\n              {Object.keys(analytics).length > 0 && (\r\n                <Bar\r\n                  data={analyticsData}\r\n                  options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                      legend: { position: 'top' },\r\n                      title: { display: true, text: '30-Day Attendance Analytics' },\r\n                    },\r\n                  }}\r\n                />\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Tab>\r\n        <Tab eventKey=\"announcements\" title=\"Announcements\">\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Post Announcement</Card.Title>\r\n              <Form onSubmit={handleCreateAnnouncement}>\r\n                <Form.Group className=\"form-group\">\r\n                  <Form.Label>Title</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={newAnnouncement.title}\r\n                    onChange={(e) =>\r\n                      setNewAnnouncement({ ...newAnnouncement, title: e.target.value })\r\n                    }\r\n                    placeholder=\"Enter announcement title\"\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"form-group\">\r\n                  <Form.Label>Content</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={4}\r\n                    value={newAnnouncement.content}\r\n                    onChange={(e) =>\r\n                      setNewAnnouncement({ ...newAnnouncement, content: e.target.value })\r\n                    }\r\n                    placeholder=\"Enter announcement content\"\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Button className=\"btn-danger\" type=\"submit\">\r\n                  Post Announcement\r\n                </Button>\r\n              </Form>\r\n              <h4 className=\"mt-4\">Recent Announcements</h4>\r\n              {announcements.length > 0 ? (\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Title</th>\r\n                      <th>Content</th>\r\n                      <th>Date</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {announcements.map((ann) => (\r\n                      <tr key={ann._id}>\r\n                        <td>{ann.title}</td>\r\n                        <td>{ann.content}</td>\r\n                        <td>{new Date(ann.createdAt).toLocaleDateString()}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              ) : (\r\n                <p>No announcements available.</p>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Tab>\r\n      </Tabs>\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{message.includes('successfully') ? 'Success' : 'Error'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{message}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button className=\"btn-danger\" onClick={() => setShowModal(false)}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal show={showProfileModal} onHide={() => setShowProfileModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleProfileUpdate}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={profile.name}\r\n                onChange={(e) => setProfile({ ...profile, name: e.target.value })}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={profile.email}\r\n                onChange={(e) => setProfile({ ...profile, email: e.target.value })}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Profile Picture</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleProfilePictureChange}\r\n              />\r\n              {profile.profilePicture && (\r\n                <img\r\n                  src={profile.profilePicture}\r\n                  alt=\"Profile\"\r\n                  className=\"profile-picture-preview\"\r\n                  style={{ maxWidth: '100px', marginTop: '10px' }}\r\n                />\r\n              )}\r\n            </Form.Group>\r\n            <Button className=\"btn-danger\" type=\"submit\">\r\n              Save Changes\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Modal show={showUploadModal} onHide={() => setShowUploadModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Upload Attendance CSV</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleUpload}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>CSV File</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                accept=\".csv\"\r\n                onChange={handleFileChange}\r\n                required\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Upload a CSV file with columns: studentId, date, status (e.g., present/absent).\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Button type=\"submit\" className=\"btn-primary\">\r\n              Upload\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FacultyDashboard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,CAAEC,MAAM,CAAEC,KAAK,CAAEC,KAAK,CAAEC,IAAI,CAAEC,KAAK,CAAEC,GAAG,CAAEC,IAAI,KAAQ,iBAAiB,CACpF,OAASC,GAAG,KAAQ,iBAAiB,CACrC,OACEC,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,UAAU,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAElBZ,OAAO,CAACa,QAAQ,CAACZ,aAAa,CAAEC,WAAW,CAAEC,UAAU,CAAEC,KAAK,CAAEC,OAAO,CAAEC,MAAM,CAAC,CAEhF,QAAS,CAAAQ,gBAAgBA,CAAAC,IAAA,CAAoB,IAAnB,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAAF,IAAA,CACzC,KAAM,CAACG,QAAQ,CAAEC,WAAW,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACiC,eAAe,CAAEC,kBAAkB,CAAC,CAAGlC,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACmC,eAAe,CAAEC,kBAAkB,CAAC,CAAGpC,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACqC,YAAY,CAAEC,eAAe,CAAC,CAAGtC,QAAQ,CAAC,GAAI,CAAAuC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CACxF,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAG3C,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAC4C,UAAU,CAAEC,aAAa,CAAC,CAAG7C,QAAQ,CAAC,CAAC,CAAC,CAAC,CAChD,KAAM,CAAC8C,OAAO,CAAEC,UAAU,CAAC,CAAG/C,QAAQ,CAAC,CAAEgD,OAAO,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CAAC,CAAC,CACjE,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGnD,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACoD,SAAS,CAAEC,YAAY,CAAC,CAAGrD,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACsD,QAAQ,CAAEC,WAAW,CAAC,CAAGvD,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACwD,WAAW,CAAEC,cAAc,CAAC,CAAGzD,QAAQ,CAAC,CAAE0D,GAAG,CAAE,EAAE,CAAEC,IAAI,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAG,CAAC,CAAC,CAC/F,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAG/D,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACgE,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGjE,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACkE,SAAS,CAAEC,YAAY,CAAC,CAAGnE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9C,KAAM,CAACoE,aAAa,CAAEC,gBAAgB,CAAC,CAAGrE,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACsE,OAAO,CAAEC,UAAU,CAAC,CAAGvE,QAAQ,CAAC,CAAEwE,IAAI,CAAE3C,IAAI,CAAC2C,IAAI,CAAEC,KAAK,CAAE5C,IAAI,CAAC4C,KAAK,CAAEC,cAAc,CAAE7C,IAAI,CAAC6C,cAAc,EAAI,EAAG,CAAC,CAAC,CACzH,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG5E,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAAC6E,aAAa,CAAEC,gBAAgB,CAAC,CAAG9E,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAC+E,eAAe,CAAEC,kBAAkB,CAAC,CAAGhF,QAAQ,CAAC,CAAEiF,KAAK,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAG,CAAC,CAAC,CAClF,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGpF,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACqF,eAAe,CAAEC,kBAAkB,CAAC,CAAGtF,QAAQ,CAAC,KAAK,CAAC,CAE7DC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsF,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAtF,KAAK,CAACuF,GAAG,CAAC,oCAAoC,CAAC,CACjEzD,WAAW,CAACwD,GAAG,CAACE,IAAI,CAAC,CACvB,CAAE,MAAOC,GAAG,CAAE,KAAAC,aAAA,CAAAC,kBAAA,CACZC,eAAe,CAAC,4BAA4B,EAAI,EAAAF,aAAA,CAAAD,GAAG,CAACI,QAAQ,UAAAH,aAAA,kBAAAC,kBAAA,CAAZD,aAAA,CAAcF,IAAI,UAAAG,kBAAA,iBAAlBA,kBAAA,CAAoBG,GAAG,GAAIL,GAAG,CAACzC,OAAO,CAAC,CAAE,OAAO,CAAC,CACnG,CACF,CAAC,CACD,KAAM,CAAA+C,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAT,GAAG,CAAG,KAAM,CAAAtF,KAAK,CAACuF,GAAG,CAAC,oCAAoC,CAAC,CACjElC,WAAW,CAACiC,GAAG,CAACE,IAAI,CAAC,CACvB,CAAE,MAAOC,GAAG,CAAE,KAAAO,cAAA,CAAAC,mBAAA,CACZL,eAAe,CAAC,4BAA4B,EAAI,EAAAI,cAAA,CAAAP,GAAG,CAACI,QAAQ,UAAAG,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAcR,IAAI,UAAAS,mBAAA,iBAAlBA,mBAAA,CAAoBH,GAAG,GAAIL,GAAG,CAACzC,OAAO,CAAC,CAAE,OAAO,CAAC,CACnG,CACF,CAAC,CACD,KAAM,CAAAkD,sBAAsB,CAAG,KAAAA,CAAA,GAAY,CACzC,GAAI,CACF,KAAM,CAAAZ,GAAG,CAAG,KAAM,CAAAtF,KAAK,CAACuF,GAAG,CAAC,sCAAsC,CAAC,CACnExB,oBAAoB,CAACuB,GAAG,CAACE,IAAI,CAAC,CAChC,CAAE,MAAOC,GAAG,CAAE,KAAAU,cAAA,CAAAC,mBAAA,CACZR,eAAe,CAAC,sCAAsC,EAAI,EAAAO,cAAA,CAAAV,GAAG,CAACI,QAAQ,UAAAM,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAcX,IAAI,UAAAY,mBAAA,iBAAlBA,mBAAA,CAAoBN,GAAG,GAAIL,GAAG,CAACzC,OAAO,CAAC,CAAE,OAAO,CAAC,CAC7G,CACF,CAAC,CACD,KAAM,CAAAqD,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAf,GAAG,CAAG,KAAM,CAAAtF,KAAK,CAACuF,GAAG,CAAC,yCAAyC,CAAC,CACtEX,gBAAgB,CAACU,GAAG,CAACE,IAAI,CAAC,CAC5B,CAAE,MAAOC,GAAG,CAAE,KAAAa,cAAA,CAAAC,mBAAA,CACZX,eAAe,CAAC,iCAAiC,EAAI,EAAAU,cAAA,CAAAb,GAAG,CAACI,QAAQ,UAAAS,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAcd,IAAI,UAAAe,mBAAA,iBAAlBA,mBAAA,CAAoBT,GAAG,GAAIL,GAAG,CAACzC,OAAO,CAAC,CAAE,OAAO,CAAC,CACxG,CACF,CAAC,CACDqC,aAAa,CAAC,CAAC,CACfU,aAAa,CAAC,CAAC,CACfG,sBAAsB,CAAC,CAAC,CACxBG,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAT,eAAe,CAAG,QAAAA,CAACE,GAAG,CAAuB,IAArB,CAAAU,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,SAAS,CAC5C,KAAM,CAAAG,EAAE,CAAGvE,IAAI,CAACwE,GAAG,CAAC,CAAC,CACrB1C,gBAAgB,CAAE2C,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAE,CAAEF,EAAE,CAAEd,GAAG,CAAEU,IAAK,CAAC,CAAC,CAAC,CACxDO,UAAU,CAAC,IAAM,CACf5C,gBAAgB,CAAE2C,IAAI,EAAKA,IAAI,CAACE,MAAM,CAAEC,CAAC,EAAKA,CAAC,CAACL,EAAE,GAAKA,EAAE,CAAC,CAAC,CAC7D,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAM,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAC,UAAU,CAAG,KAAM,CAAAnH,KAAK,CAACuF,GAAG,CAAC,2CAA2CxD,eAAe,EAAE,CAAC,CAChGU,WAAW,CAAC0E,UAAU,CAAC3B,IAAI,CAAC,CAC5B3C,UAAU,CAAC,CAAEC,OAAO,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CAAC,CAAC,CACrCJ,aAAa,CAAC,CAAC,CAAC,CAAC,CAEjB,KAAM,CAAAyE,iBAAiB,CAAG,KAAM,CAAApH,KAAK,CAACuF,GAAG,CACvC,6CAA6CpD,YAAY,YAAYJ,eAAe,EACtF,CAAC,CACD,KAAM,CAAAsF,iBAAiB,CAAGD,iBAAiB,CAAC5B,IAAI,CAAC8B,MAAM,CAAC,CAACC,GAAG,CAAEC,MAAM,GAAK,CACvED,GAAG,CAACC,MAAM,CAACC,SAAS,CAAC,CAAGD,MAAM,CAACE,MAAM,CACrC,MAAO,CAAAH,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CACN5E,aAAa,CAAC0E,iBAAiB,CAAC,CAChCM,aAAa,CAACN,iBAAiB,CAAC,CAEhC,KAAM,CAAAO,SAAS,CAAG,GAAI,CAAAvF,IAAI,CAACF,YAAY,CAAC,CACxCyF,SAAS,CAACC,OAAO,CAACD,SAAS,CAACE,OAAO,CAAC,CAAC,CAAG,EAAE,CAAC,CAC3C,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAA/H,KAAK,CAACuF,GAAG,CAClC,gDAAgDxD,eAAe,cAAc6F,SAAS,CAACtF,WAAW,CAAC,CAAC,YAAYH,YAAY,EAC9H,CAAC,CACD,KAAM,CAAA6F,aAAa,CAAGD,YAAY,CAACvC,IAAI,CAAC8B,MAAM,CAAC,CAACC,GAAG,CAAEC,MAAM,GAAK,CAC9DD,GAAG,CAACC,MAAM,CAACC,SAAS,CAAC,CAAGF,GAAG,CAACC,MAAM,CAACC,SAAS,CAAC,EAAI,CAAE3E,OAAO,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CAAC,CAC1EwE,GAAG,CAACC,MAAM,CAACC,SAAS,CAAC,CAACD,MAAM,CAACE,MAAM,CAAC,EAAE,CACtC,MAAO,CAAAH,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CACNtD,YAAY,CAAC+D,aAAa,CAAC,CAC7B,CAAE,MAAOvC,GAAG,CAAE,KAAAwC,cAAA,CAAAC,mBAAA,CACZtC,eAAe,CAAC,6BAA6B,EAAI,EAAAqC,cAAA,CAAAxC,GAAG,CAACI,QAAQ,UAAAoC,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAczC,IAAI,UAAA0C,mBAAA,iBAAlBA,mBAAA,CAAoBpC,GAAG,GAAIL,GAAG,CAACzC,OAAO,CAAC,CAAE,OAAO,CAAC,CACpG,CACF,CAAC,CAED,KAAM,CAAA2E,aAAa,CAAIQ,cAAc,EAAK,CACxC,KAAM,CAAAC,KAAK,CAAG,CAAEtF,OAAO,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CAAC,CACvCsF,MAAM,CAACC,MAAM,CAACH,cAAc,CAAC,CAACI,OAAO,CAAEb,MAAM,EAAK,CAChD,GAAIA,MAAM,GAAK,SAAS,CAAEU,KAAK,CAACtF,OAAO,EAAE,CACzC,GAAI4E,MAAM,GAAK,QAAQ,CAAEU,KAAK,CAACrF,MAAM,EAAE,CACzC,CAAC,CAAC,CACFF,UAAU,CAACuF,KAAK,CAAC,CACnB,CAAC,CAED,KAAM,CAAAI,sBAAsB,CAAGA,CAACf,SAAS,CAAEC,MAAM,GAAK,CACpD/E,aAAa,CAAEmE,IAAI,EAAK,CACtB,KAAM,CAAA2B,aAAa,CAAG,CAAE,GAAG3B,IAAI,CAAE,CAACW,SAAS,EAAGC,MAAO,CAAC,CACtDC,aAAa,CAACc,aAAa,CAAC,CAC5B,MAAO,CAAAA,aAAa,CACtB,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC;AACA,GAAI,CAAC3G,eAAe,EAAI,CAACI,YAAY,CAAE,CACrCyD,eAAe,CAAC,qDAAqD,CAAE,OAAO,CAAC,CAC/E,OACF,CACA,GAAIyC,MAAM,CAACM,IAAI,CAACjG,UAAU,CAAC,CAACgE,MAAM,GAAK,CAAC,CAAE,CACxCd,eAAe,CAAC,+BAA+B,CAAE,OAAO,CAAC,CACzD,OACF,CAEA,GAAI,CACF,KAAM,CAAAlC,OAAO,CAAGzB,eAAe,EAAIN,IAAI,CAAC+B,OAAO,EAAI,iBAAiB,CAAE;AACtE,KAAM,CAAAkF,kBAAkB,CAAGP,MAAM,CAACQ,OAAO,CAACnG,UAAU,CAAC,CAACoG,GAAG,CAAC,MAAAC,KAAA,EAA+B,IAAxB,CAACtB,SAAS,CAAEC,MAAM,CAAC,CAAAqB,KAAA,CAClF,GAAI,CACF;AACA,KAAM,CAAAC,WAAW,CAAG,KAAM,CAAAhJ,KAAK,CAACuF,GAAG,CACjC,kDAAkDkC,SAAS,SAAStF,YAAY,YAAYJ,eAAe,EAC7G,CAAC,CACD,KAAM,CAAAkH,cAAc,CAAGD,WAAW,CAACxD,IAAI,CAAC,CAAC,CAAC,CAE1C,KAAM,CAAA0D,OAAO,CAAG,CACdzB,SAAS,CACT9D,OAAO,CAAE5B,eAAe,CACxB2B,OAAO,CACPgE,MAAM,CACNyB,IAAI,CAAEhH,YACR,CAAC,CAED,GAAI8G,cAAc,CAAE,CAClB;AACA,MAAO,CAAAjJ,KAAK,CAACoJ,GAAG,CAAC,wCAAwCH,cAAc,CAACI,GAAG,EAAE,CAAEH,OAAO,CAAC,CACzF,CAAC,IAAM,CACL;AACA,MAAO,CAAAlJ,KAAK,CAACsJ,IAAI,CAAC,sCAAsC,CAAEJ,OAAO,CAAC,CACpE,CACF,CAAE,MAAOzD,GAAG,CAAE,KAAA8D,cAAA,CAAAC,mBAAA,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,sBAAsBhC,SAAS,KAAK,EAAA8B,cAAA,CAAA9D,GAAG,CAACI,QAAQ,UAAA0D,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAc/D,IAAI,UAAAgE,mBAAA,iBAAlBA,mBAAA,CAAoB1D,GAAG,GAAIL,GAAG,CAACzC,OAAO,EAAE,CAAC,CAC/F,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAA0G,OAAO,CAACC,GAAG,CAACf,kBAAkB,CAAC,CAErC;AACA,KAAM,CAAAgB,UAAU,CAAG,KAAM,CAAA5J,KAAK,CAACuF,GAAG,CAAC,sCAAsC,CAAC,CAC1ExB,oBAAoB,CAAC6F,UAAU,CAACpE,IAAI,CAAC,CACrC7C,aAAa,CAAC,CAAC,CAAC,CAAC,CAAE;AACnBE,UAAU,CAAC,CAAEC,OAAO,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CAAC,CAAC,CAAE;AACvC6C,eAAe,CAAC,oCAAoC,CAAE,SAAS,CAAC,CAClE,CAAE,MAAOH,GAAG,CAAE,CACZG,eAAe,CAAC,gCAAgCH,GAAG,CAACzC,OAAO,EAAE,CAAE,OAAO,CAAC,CACzE,CACF,CAAC,CAED,KAAM,CAAA6G,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAAC,GAAG,CAAG,CACV,CAAC,YAAY,CAAE,MAAM,CAAE,SAAS,CAAE,QAAQ,CAAE,MAAM,CAAE,MAAM,CAAC,CAC3D,GAAGtH,QAAQ,CAACsG,GAAG,CAAEiB,OAAO,EAAK,CAC3BA,OAAO,CAACtC,SAAS,CACjBsC,OAAO,CAACzF,IAAI,CACZyF,OAAO,CAACpG,OAAO,CACfjB,UAAU,CAACqH,OAAO,CAACtC,SAAS,CAAC,EAAI,KAAK,CACtCtF,YAAY,CACZ,GAAI,CAAAE,IAAI,CAAC,CAAC,CAAC2H,kBAAkB,CAAC,CAAC,CAChC,CAAC,CACH,CACElB,GAAG,CAAEmB,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAC3BA,IAAI,CAAC,IAAI,CAAC,CACb,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACN,GAAG,CAAC,CAAE,CAAEtD,IAAI,CAAE,UAAW,CAAC,CAAC,CAClD,KAAM,CAAA6D,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC,CAC5C,KAAM,CAAAM,CAAC,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACrCF,CAAC,CAACG,IAAI,CAAGP,GAAG,CACZI,CAAC,CAACI,QAAQ,CAAG,cAAc9I,eAAe,IAAII,YAAY,MAAM,CAChEsI,CAAC,CAACK,KAAK,CAAC,CAAC,CACTR,MAAM,CAACC,GAAG,CAACQ,eAAe,CAACV,GAAG,CAAC,CAC/BzE,eAAe,CAAC,mCAAmC,CAAC,CACtD,CAAC,CAED,KAAM,CAAAoF,oBAAoB,CAAG,KAAO,CAAAC,CAAC,EAAK,CACxCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAlL,KAAK,CAACsJ,IAAI,CAAC,oCAAoC,CAAEhG,WAAW,CAAC,CACnEC,cAAc,CAAC,CAAEC,GAAG,CAAE,EAAE,CAAEC,IAAI,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAG,CAAC,CAAC,CAC/D,KAAM,CAAA2B,GAAG,CAAG,KAAM,CAAAtF,KAAK,CAACuF,GAAG,CAAC,oCAAoC,CAAC,CACjElC,WAAW,CAACiC,GAAG,CAACE,IAAI,CAAC,CACrBI,eAAe,CAAC,gCAAgC,CAAC,CACnD,CAAE,MAAOH,GAAG,CAAE,KAAA0F,cAAA,CAAAC,mBAAA,CACZxF,eAAe,CAAC,6BAA6B,EAAI,EAAAuF,cAAA,CAAA1F,GAAG,CAACI,QAAQ,UAAAsF,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAc3F,IAAI,UAAA4F,mBAAA,iBAAlBA,mBAAA,CAAoBtF,GAAG,GAAIL,GAAG,CAACzC,OAAO,CAAC,CAAE,OAAO,CAAC,CACpG,CACF,CAAC,CAED,KAAM,CAAAqI,kBAAkB,CAAIzE,EAAE,EAAK,CACjC,KAAM,CAAA0E,cAAc,CAAGlI,QAAQ,CAACmI,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAACnC,GAAG,GAAKzC,EAAE,CAAC,CACzDrD,cAAc,CAAC,CACbC,GAAG,CAAE8H,cAAc,CAAC9H,GAAG,CACvBC,IAAI,CAAE6H,cAAc,CAAC7H,IAAI,CACzBC,OAAO,CAAE4H,cAAc,CAAC5H,OAAO,CAC/BC,OAAO,CAAE2H,cAAc,CAAC3H,OAC1B,CAAC,CAAC,CACFE,iBAAiB,CAAC+C,EAAE,CAAC,CACvB,CAAC,CAED,KAAM,CAAA6E,oBAAoB,CAAG,KAAO,CAAAR,CAAC,EAAK,CACxCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAlL,KAAK,CAACoJ,GAAG,CACb,sCAAsCxF,cAAc,EAAE,CACtDN,WACF,CAAC,CACDC,cAAc,CAAC,CAAEC,GAAG,CAAE,EAAE,CAAEC,IAAI,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAG,CAAC,CAAC,CAC/DE,iBAAiB,CAAC,IAAI,CAAC,CACvB,KAAM,CAAAyB,GAAG,CAAG,KAAM,CAAAtF,KAAK,CAACuF,GAAG,CAAC,oCAAoC,CAAC,CACjElC,WAAW,CAACiC,GAAG,CAACE,IAAI,CAAC,CACrBI,eAAe,CAAC,gCAAgC,CAAC,CACnD,CAAE,MAAOH,GAAG,CAAE,KAAAiG,cAAA,CAAAC,mBAAA,CACZ/F,eAAe,CAAC,6BAA6B,EAAI,EAAA8F,cAAA,CAAAjG,GAAG,CAACI,QAAQ,UAAA6F,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAclG,IAAI,UAAAmG,mBAAA,iBAAlBA,mBAAA,CAAoB7F,GAAG,GAAIL,GAAG,CAACzC,OAAO,CAAC,CAAE,OAAO,CAAC,CACpG,CACF,CAAC,CAED,KAAM,CAAA4I,oBAAoB,CAAG,KAAO,CAAAhF,EAAE,EAAK,CACzC,GAAI,CACF,KAAM,CAAA5G,KAAK,CAAC6L,MAAM,CAAC,sCAAsCjF,EAAE,EAAE,CAAC,CAC9D,KAAM,CAAAtB,GAAG,CAAG,KAAM,CAAAtF,KAAK,CAACuF,GAAG,CAAC,oCAAoC,CAAC,CACjElC,WAAW,CAACiC,GAAG,CAACE,IAAI,CAAC,CACrBI,eAAe,CAAC,gCAAgC,CAAC,CACnD,CAAE,MAAOH,GAAG,CAAE,KAAAqG,cAAA,CAAAC,mBAAA,CACZnG,eAAe,CAAC,6BAA6B,EAAI,EAAAkG,cAAA,CAAArG,GAAG,CAACI,QAAQ,UAAAiG,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAActG,IAAI,UAAAuG,mBAAA,iBAAlBA,mBAAA,CAAoBjG,GAAG,GAAIL,GAAG,CAACzC,OAAO,CAAC,CAAE,OAAO,CAAC,CACpG,CACF,CAAC,CAED,KAAM,CAAAgJ,mBAAmB,CAAG,KAAO,CAAAf,CAAC,EAAK,CACvCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAe,WAAW,CAAG,CAClB,GAAGtK,IAAI,CACP2C,IAAI,CAAEF,OAAO,CAACE,IAAI,CAClBC,KAAK,CAAEH,OAAO,CAACG,KAAK,CACpBC,cAAc,CAAEJ,OAAO,CAACI,cAC1B,CAAC,CACD0H,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC,CAAC,CACzDrK,OAAO,CAACqK,WAAW,CAAC,CACpBvH,mBAAmB,CAAC,KAAK,CAAC,CAC1BkB,eAAe,CAAC,+BAA+B,CAAC,CAClD,CAAE,MAAOH,GAAG,CAAE,KAAA6G,eAAA,CAAAC,oBAAA,CACZ3G,eAAe,CAAC,4BAA4B,EAAI,EAAA0G,eAAA,CAAA7G,GAAG,CAACI,QAAQ,UAAAyG,eAAA,kBAAAC,oBAAA,CAAZD,eAAA,CAAc9G,IAAI,UAAA+G,oBAAA,iBAAlBA,oBAAA,CAAoBzG,GAAG,GAAIL,GAAG,CAACzC,OAAO,CAAC,CAAE,OAAO,CAAC,CACnG,CACF,CAAC,CAED,KAAM,CAAAwJ,0BAA0B,CAAIvB,CAAC,EAAK,CACxC,KAAM,CAAAhG,IAAI,CAAGgG,CAAC,CAACwB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAC9B,GAAIzH,IAAI,CAAE,CACR,KAAM,CAAA0H,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAC/BD,MAAM,CAACE,SAAS,CAAG,IAAM,CACvBxI,UAAU,CAAC,CAAE,GAAGD,OAAO,CAAEI,cAAc,CAAEmI,MAAM,CAACG,MAAO,CAAC,CAAC,CAC3D,CAAC,CACDH,MAAM,CAACI,aAAa,CAAC9H,IAAI,CAAC,CAC5B,CACF,CAAC,CAED,KAAM,CAAA+H,wBAAwB,CAAG,KAAO,CAAA/B,CAAC,EAAK,CAC5CA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAlL,KAAK,CAACsJ,IAAI,CAAC,yCAAyC,CAAE,CAC1D,GAAGzE,eAAe,CAClBoI,SAAS,CAAEtL,IAAI,CAAC0H,GAClB,CAAC,CAAC,CACFvE,kBAAkB,CAAC,CAAEC,KAAK,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAG,CAAC,CAAC,CAC9C,KAAM,CAAAM,GAAG,CAAG,KAAM,CAAAtF,KAAK,CAACuF,GAAG,CAAC,yCAAyC,CAAC,CACtEX,gBAAgB,CAACU,GAAG,CAACE,IAAI,CAAC,CAC1BI,eAAe,CAAC,mCAAmC,CAAC,CACtD,CAAE,MAAOH,GAAG,CAAE,KAAAyH,eAAA,CAAAC,oBAAA,CACZvH,eAAe,CAAC,+BAA+B,EAAI,EAAAsH,eAAA,CAAAzH,GAAG,CAACI,QAAQ,UAAAqH,eAAA,kBAAAC,oBAAA,CAAZD,eAAA,CAAc1H,IAAI,UAAA2H,oBAAA,iBAAlBA,oBAAA,CAAoBrH,GAAG,GAAIL,GAAG,CAACzC,OAAO,CAAC,CAAE,OAAO,CAAC,CACtG,CACF,CAAC,CAED,KAAM,CAAAgF,aAAa,CAAG,CACpBoF,MAAM,CAAE5K,QAAQ,CAACsG,GAAG,CAAE0C,CAAC,EAAKA,CAAC,CAAClH,IAAI,CAAC,CACnC+I,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,SAAS,CAChB9H,IAAI,CAAEhD,QAAQ,CAACsG,GAAG,CAAE0C,CAAC,OAAA+B,qBAAA,OAAK,EAAAA,qBAAA,CAAAvJ,SAAS,CAACwH,CAAC,CAAC/D,SAAS,CAAC,UAAA8F,qBAAA,iBAAtBA,qBAAA,CAAwBzK,OAAO,GAAI,CAAC,GAAC,CAC/D0K,eAAe,CAAE,SACnB,CAAC,CACD,CACEF,KAAK,CAAE,QAAQ,CACf9H,IAAI,CAAEhD,QAAQ,CAACsG,GAAG,CAAE0C,CAAC,OAAAiC,sBAAA,OAAK,EAAAA,sBAAA,CAAAzJ,SAAS,CAACwH,CAAC,CAAC/D,SAAS,CAAC,UAAAgG,sBAAA,iBAAtBA,sBAAA,CAAwB1K,MAAM,GAAI,CAAC,GAAC,CAC9DyK,eAAe,CAAE,SACnB,CAAC,CAEL,CAAC,CAED,KAAM,CAAAE,YAAY,CAAG,KAAO,CAAAzC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CAACjG,IAAI,CAAE,CACTW,eAAe,CAAC,qCAAqC,CAAE,OAAO,CAAC,CAC/D,OACF,CAEA,KAAM,CAAA+H,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,CAAE5I,IAAI,CAAC,CAChC0I,QAAQ,CAACE,MAAM,CAAC,SAAS,CAAE9L,eAAe,CAAC,CAC3C4L,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAE1L,YAAY,CAAC,CACrCwL,QAAQ,CAACE,MAAM,CAAC,SAAS,CAAE5L,eAAe,EAAIN,IAAI,CAAC+B,OAAO,CAAC,CAE3D,GAAI,CACF,KAAM,CAAA4B,GAAG,CAAG,KAAM,CAAAtF,KAAK,CAACsJ,IAAI,CAAC,6CAA6C,CAAEqE,QAAQ,CAAE,CACpFG,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CACnD,CAAC,CAAC,CACF/J,oBAAoB,CAACuB,GAAG,CAACE,IAAI,CAACuI,iBAAiB,CAAC,CAChDnI,eAAe,CAAC,2CAA2C,CAAE,SAAS,CAAC,CACvEV,OAAO,CAAC,IAAI,CAAC,CACbE,kBAAkB,CAAC,KAAK,CAAC,CACzB8B,YAAY,CAAC,CAAC,CAAE;AAClB,CAAE,MAAOzB,GAAG,CAAE,KAAAuI,eAAA,CAAAC,oBAAA,CACZrI,eAAe,CAAC,wBAAwB,EAAI,EAAAoI,eAAA,CAAAvI,GAAG,CAACI,QAAQ,UAAAmI,eAAA,kBAAAC,oBAAA,CAAZD,eAAA,CAAcxI,IAAI,UAAAyI,oBAAA,iBAAlBA,oBAAA,CAAoBnI,GAAG,GAAIL,GAAG,CAACzC,OAAO,CAAC,CAAE,OAAO,CAAC,CAC/F,CACF,CAAC,CAED,KAAM,CAAAkL,gBAAgB,CAAIjD,CAAC,EAAK,CAC9B/F,OAAO,CAAC+F,CAAC,CAACwB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC5B,CAAC,CAED,mBACEvL,KAAA,QAAKgN,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCjN,KAAA,OAAAiN,QAAA,EAAI,WAAS,CAACzM,IAAI,CAAC2C,IAAI,EAAK,CAAC,cAC7BnD,KAAA,MAAAiN,QAAA,eAAG/M,IAAA,WAAA+M,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAACzM,IAAI,CAAC+B,OAAO,EAAI,CAAC,cAC/CrC,IAAA,CAACnB,MAAM,EACLmO,OAAO,CAAC,WAAW,CACnBF,SAAS,CAAC,MAAM,CAChBG,OAAO,CAAEA,CAAA,GAAM5J,mBAAmB,CAAC,IAAI,CAAE,CAAA0J,QAAA,CAC1C,cAED,CAAQ,CAAC,CACRlK,aAAa,CAAC4E,GAAG,CAAEyF,KAAK,eACvBlN,IAAA,CAACf,KAAK,EAEJ+N,OAAO,CAAEE,KAAK,CAAC/H,IAAI,GAAK,SAAS,CAAG,SAAS,CAAG,QAAS,CACzDgI,OAAO,CAAEA,CAAA,GAAMrK,gBAAgB,CAAE2C,IAAI,EAAKA,IAAI,CAACE,MAAM,CAAEC,CAAC,EAAKA,CAAC,CAACL,EAAE,GAAK2H,KAAK,CAAC3H,EAAE,CAAC,CAAE,CACjF6H,WAAW,MAAAL,QAAA,CAEVG,KAAK,CAACzI,GAAG,EALLyI,KAAK,CAAC3H,EAMN,CACR,CAAC,cACFzF,KAAA,CAACX,IAAI,EAACkO,gBAAgB,CAAC,YAAY,CAACP,SAAS,CAAC,MAAM,CAAAC,QAAA,eAClD/M,IAAA,CAACd,GAAG,EAACoO,QAAQ,CAAC,YAAY,CAAC5J,KAAK,CAAC,iBAAiB,CAAAqJ,QAAA,cAChD/M,IAAA,CAAChB,IAAI,EAAC8N,SAAS,CAAC,MAAM,CAAAC,QAAA,cACpBjN,KAAA,CAACd,IAAI,CAACuO,IAAI,EAAAR,QAAA,eACR/M,IAAA,CAAChB,IAAI,CAACU,KAAK,EAAAqN,QAAA,CAAC,uBAAqB,CAAY,CAAC,cAC9CjN,KAAA,CAAClB,IAAI,EAAAmO,QAAA,eACHjN,KAAA,QAAKgN,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB/M,IAAA,QAAK8M,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBjN,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,YAAY,CAAAC,QAAA,eAChC/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,MAAI,CAAY,CAAC,cAC7B/M,IAAA,CAACpB,IAAI,CAAC8O,OAAO,EACXvI,IAAI,CAAC,MAAM,CACXwI,KAAK,CAAE7M,YAAa,CACpB8M,QAAQ,CAAGhE,CAAC,EAAK7I,eAAe,CAAC6I,CAAC,CAACwB,MAAM,CAACuC,KAAK,CAAE,CACjDE,QAAQ,MACT,CAAC,EACQ,CAAC,CACV,CAAC,cACN7N,IAAA,QAAK8M,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBjN,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,YAAY,CAAAC,QAAA,eAChC/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,SAAO,CAAY,CAAC,cAChCjN,KAAA,CAAClB,IAAI,CAAC8O,OAAO,EACXI,EAAE,CAAC,QAAQ,CACXH,KAAK,CAAEjN,eAAgB,CACvBkN,QAAQ,CAAGhE,CAAC,EAAKjJ,kBAAkB,CAACiJ,CAAC,CAACwB,MAAM,CAACuC,KAAK,CAAE,CAAAZ,QAAA,eAEpD/M,IAAA,WAAQ2N,KAAK,CAAC,EAAE,CAAAZ,QAAA,CAAC,gBAAc,CAAQ,CAAC,CACvCvM,QAAQ,CAACiH,GAAG,CAAEsG,GAAG,eAChB/N,IAAA,WAAkB2N,KAAK,CAAEI,GAAI,CAAAhB,QAAA,CAC1BgB,GAAG,EADOA,GAEL,CACT,CAAC,EACU,CAAC,EACL,CAAC,CACV,CAAC,cACN/N,IAAA,QAAK8M,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBjN,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,YAAY,CAAAC,QAAA,eAChC/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,SAAO,CAAY,CAAC,cAChCjN,KAAA,CAAClB,IAAI,CAAC8O,OAAO,EACXI,EAAE,CAAC,QAAQ,CACXH,KAAK,CAAE/M,eAAgB,CACvBgN,QAAQ,CAAGhE,CAAC,EAAK/I,kBAAkB,CAAC+I,CAAC,CAACwB,MAAM,CAACuC,KAAK,CAAE,CAAAZ,QAAA,eAEpD/M,IAAA,WAAQ2N,KAAK,CAAC,EAAE,CAAAZ,QAAA,CAAC,gBAAc,CAAQ,CAAC,cACxC/M,IAAA,WAAQ2N,KAAK,CAAErN,IAAI,CAAC+B,OAAQ,CAAA0K,QAAA,CAAEzM,IAAI,CAAC+B,OAAO,CAAS,CAAC,CACnDN,QAAQ,CACN4D,MAAM,CAAEwE,CAAC,EAAKA,CAAC,CAAC7H,OAAO,GAAK5B,eAAe,CAAC,CAC5C+G,GAAG,CAAE0C,CAAC,EACLA,CAAC,CAAC9H,OAAO,GAAK/B,IAAI,CAAC+B,OAAO,cACxBrC,IAAA,WAAoB2N,KAAK,CAAExD,CAAC,CAAC9H,OAAQ,CAAA0K,QAAA,CAClC5C,CAAC,CAAC9H,OAAO,EADC8H,CAAC,CAACnC,GAEP,CAAC,CACP,IACN,CAAC,EACS,CAAC,EACL,CAAC,CACV,CAAC,EACH,CAAC,cACNlI,KAAA,QAAKgN,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB/M,IAAA,CAACnB,MAAM,EAACiO,SAAS,CAAC,iBAAiB,CAACG,OAAO,CAAEpH,YAAa,CAAAkH,QAAA,CAAC,iBAE3D,CAAQ,CAAC,cACT/M,IAAA,CAACnB,MAAM,EACLmO,OAAO,CAAC,SAAS,CACjBF,SAAS,CAAC,MAAM,CAChBG,OAAO,CAAEA,CAAA,GAAMlJ,kBAAkB,CAAC,IAAI,CAAE,CAAAgJ,QAAA,CACzC,uBAED,CAAQ,CAAC,EACN,CAAC,EACF,CAAC,CACN5L,QAAQ,CAACkE,MAAM,CAAG,CAAC,eAClBvF,KAAA,CAAAI,SAAA,EAAA6M,QAAA,eACEjN,KAAA,OAAIgN,SAAS,CAAC,MAAM,CAAAC,QAAA,EAAC,sBAAoB,CAAC,GAAI,CAAA/L,IAAI,CAACF,YAAY,CAAC,CAACkN,kBAAkB,CAAC,CAAC,EAAK,CAAC,cAC3FlO,KAAA,CAAChB,KAAK,EAACmP,OAAO,MAACC,QAAQ,MAACC,KAAK,MAAApB,QAAA,eAC3B/M,IAAA,UAAA+M,QAAA,cACEjN,KAAA,OAAAiN,QAAA,eACE/M,IAAA,OAAA+M,QAAA,CAAI,YAAU,CAAI,CAAC,cACnB/M,IAAA,OAAA+M,QAAA,CAAI,MAAI,CAAI,CAAC,cACb/M,IAAA,OAAA+M,QAAA,CAAI,SAAO,CAAI,CAAC,cAChB/M,IAAA,OAAA+M,QAAA,CAAI,QAAM,CAAI,CAAC,EACb,CAAC,CACA,CAAC,cACR/M,IAAA,UAAA+M,QAAA,CACG5L,QAAQ,CAACsG,GAAG,CAAEiB,OAAO,eACpB5I,KAAA,OAAAiN,QAAA,eACE/M,IAAA,OAAA+M,QAAA,CAAKrE,OAAO,CAACtC,SAAS,CAAK,CAAC,cAC5BpG,IAAA,OAAA+M,QAAA,CAAKrE,OAAO,CAACzF,IAAI,CAAK,CAAC,cACvBjD,IAAA,OAAA+M,QAAA,CAAKrE,OAAO,CAACpG,OAAO,CAAK,CAAC,cAC1BxC,KAAA,OAAAiN,QAAA,eACE/M,IAAA,CAACpB,IAAI,CAACwP,KAAK,EACTjJ,IAAI,CAAC,OAAO,CACZ8G,KAAK,CAAC,SAAS,CACfhJ,IAAI,CAAE,cAAcyF,OAAO,CAACV,GAAG,EAAG,CAClCqG,OAAO,CAAEhN,UAAU,CAACqH,OAAO,CAACtC,SAAS,CAAC,GAAK,SAAU,CACrDwH,QAAQ,CAAEA,CAAA,GAAMzG,sBAAsB,CAACuB,OAAO,CAACtC,SAAS,CAAE,SAAS,CAAE,CACtE,CAAC,cACFpG,IAAA,CAACpB,IAAI,CAACwP,KAAK,EACTjJ,IAAI,CAAC,OAAO,CACZ8G,KAAK,CAAC,QAAQ,CACdhJ,IAAI,CAAE,cAAcyF,OAAO,CAACV,GAAG,EAAG,CAClCqG,OAAO,CAAEhN,UAAU,CAACqH,OAAO,CAACtC,SAAS,CAAC,GAAK,QAAS,CACpDwH,QAAQ,CAAEA,CAAA,GAAMzG,sBAAsB,CAACuB,OAAO,CAACtC,SAAS,CAAE,QAAQ,CAAE,CACrE,CAAC,EACA,CAAC,GAnBEsC,OAAO,CAACV,GAoBb,CACL,CAAC,CACG,CAAC,EACH,CAAC,cACRlI,KAAA,MAAAiN,QAAA,eACE/M,IAAA,WAAA+M,QAAA,CAAQ,UAAQ,CAAQ,CAAC,cAAW,CAACxL,OAAO,CAACE,OAAO,CAAC,aAAW,CAACF,OAAO,CAACG,MAAM,EAC9E,CAAC,cACJ1B,IAAA,CAACnB,MAAM,EAACiO,SAAS,CAAC,iBAAiB,CAACG,OAAO,CAAE5F,gBAAiB,CAAA0F,QAAA,CAAC,mBAE/D,CAAQ,CAAC,cACT/M,IAAA,CAACnB,MAAM,EAACiO,SAAS,CAAC,YAAY,CAACG,OAAO,CAAEzE,gBAAiB,CAAAuE,QAAA,CAAC,eAE1D,CAAQ,CAAC,EACT,CACH,EACQ,CAAC,CACR,CAAC,CACJ,CAAC,cACN/M,IAAA,CAACd,GAAG,EAACoO,QAAQ,CAAC,UAAU,CAAC5J,KAAK,CAAC,iBAAiB,CAAAqJ,QAAA,cAC9C/M,IAAA,CAAChB,IAAI,EAAC8N,SAAS,CAAC,MAAM,CAAAC,QAAA,cACpBjN,KAAA,CAACd,IAAI,CAACuO,IAAI,EAAAR,QAAA,eACR/M,IAAA,CAAChB,IAAI,CAACU,KAAK,EAAAqN,QAAA,CAAC,gBAAc,CAAY,CAAC,cACvCjN,KAAA,CAAChB,KAAK,EAACgO,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC/B/M,IAAA,UAAA+M,QAAA,cACEjN,KAAA,OAAAiN,QAAA,eACE/M,IAAA,OAAA+M,QAAA,CAAI,KAAG,CAAI,CAAC,cACZ/M,IAAA,OAAA+M,QAAA,CAAI,MAAI,CAAI,CAAC,cACb/M,IAAA,OAAA+M,QAAA,CAAI,SAAO,CAAI,CAAC,cAChB/M,IAAA,OAAA+M,QAAA,CAAI,SAAO,CAAI,CAAC,cAChB/M,IAAA,OAAA+M,QAAA,CAAI,SAAO,CAAI,CAAC,EACd,CAAC,CACA,CAAC,cACR/M,IAAA,UAAA+M,QAAA,CACGhL,QAAQ,CAAC0F,GAAG,CAAE6G,SAAS,eACtBxO,KAAA,OAAAiN,QAAA,eACE/M,IAAA,OAAA+M,QAAA,CAAKuB,SAAS,CAACnM,GAAG,CAAK,CAAC,cACxBnC,IAAA,OAAA+M,QAAA,CAAKuB,SAAS,CAAClM,IAAI,CAAK,CAAC,cACzBpC,IAAA,OAAA+M,QAAA,CAAKuB,SAAS,CAACjM,OAAO,CAAK,CAAC,cAC5BrC,IAAA,OAAA+M,QAAA,CAAKuB,SAAS,CAAChM,OAAO,CAAK,CAAC,cAC5BxC,KAAA,OAAAiN,QAAA,eACE/M,IAAA,CAACnB,MAAM,EACLmO,OAAO,CAAC,SAAS,CACjBC,OAAO,CAAEA,CAAA,GAAMjD,kBAAkB,CAACsE,SAAS,CAACtG,GAAG,CAAE,CACjD8E,SAAS,CAAC,MAAM,CAAAC,QAAA,CACjB,MAED,CAAQ,CAAC,cACT/M,IAAA,CAACnB,MAAM,EAACmO,OAAO,CAAC,QAAQ,CAACC,OAAO,CAAEA,CAAA,GAAM1C,oBAAoB,CAAC+D,SAAS,CAACtG,GAAG,CAAE,CAAA+E,QAAA,CAAC,QAE7E,CAAQ,CAAC,EACP,CAAC,GAhBEuB,SAAS,CAACtG,GAiBf,CACL,CAAC,CACG,CAAC,EACH,CAAC,cACRlI,KAAA,CAAClB,IAAI,EAAC2P,QAAQ,CAAEhM,cAAc,CAAG6H,oBAAoB,CAAGT,oBAAqB,CAAAoD,QAAA,eAC3EjN,KAAA,QAAKgN,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB/M,IAAA,QAAK8M,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBjN,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,YAAY,CAAAC,QAAA,eAChC/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,KAAG,CAAY,CAAC,cAC5BjN,KAAA,CAAClB,IAAI,CAAC8O,OAAO,EACXI,EAAE,CAAC,QAAQ,CACXH,KAAK,CAAE1L,WAAW,CAACE,GAAI,CACvByL,QAAQ,CAAGhE,CAAC,EACV1H,cAAc,CAAC,CAAE,GAAGD,WAAW,CAAEE,GAAG,CAAEyH,CAAC,CAACwB,MAAM,CAACuC,KAAM,CAAC,CACvD,CACDE,QAAQ,MAAAd,QAAA,eAER/M,IAAA,WAAQ2N,KAAK,CAAC,EAAE,CAAAZ,QAAA,CAAC,YAAU,CAAQ,CAAC,CACnC,CAAC,QAAQ,CAAE,SAAS,CAAE,WAAW,CAAE,UAAU,CAAE,QAAQ,CAAE,UAAU,CAAE,QAAQ,CAAC,CAACtF,GAAG,CAChFtF,GAAG,eACFnC,IAAA,WAAkB2N,KAAK,CAAExL,GAAI,CAAA4K,QAAA,CAC1B5K,GAAG,EADOA,GAEL,CAEZ,CAAC,EACW,CAAC,EACL,CAAC,CACV,CAAC,cACNnC,IAAA,QAAK8M,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBjN,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,YAAY,CAAAC,QAAA,eAChC/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,MAAI,CAAY,CAAC,cAC7B/M,IAAA,CAACpB,IAAI,CAAC8O,OAAO,EACXvI,IAAI,CAAC,MAAM,CACXwI,KAAK,CAAE1L,WAAW,CAACG,IAAK,CACxBwL,QAAQ,CAAGhE,CAAC,EACV1H,cAAc,CAAC,CAAE,GAAGD,WAAW,CAAEG,IAAI,CAAEwH,CAAC,CAACwB,MAAM,CAACuC,KAAM,CAAC,CACxD,CACDa,WAAW,CAAC,2BAA2B,CACvCX,QAAQ,MACT,CAAC,EACQ,CAAC,CACV,CAAC,cACN7N,IAAA,QAAK8M,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBjN,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,YAAY,CAAAC,QAAA,eAChC/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,SAAO,CAAY,CAAC,cAChC/M,IAAA,CAACpB,IAAI,CAAC8O,OAAO,EACXvI,IAAI,CAAC,MAAM,CACXwI,KAAK,CAAE1L,WAAW,CAACI,OAAQ,CAC3BuL,QAAQ,CAAGhE,CAAC,EACV1H,cAAc,CAAC,CAAE,GAAGD,WAAW,CAAEI,OAAO,CAAEuH,CAAC,CAACwB,MAAM,CAACuC,KAAM,CAAC,CAC3D,CACDa,WAAW,CAAC,eAAe,CAC3BX,QAAQ,MACT,CAAC,EACQ,CAAC,CACV,CAAC,cACN7N,IAAA,QAAK8M,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBjN,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,YAAY,CAAAC,QAAA,eAChC/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,SAAO,CAAY,CAAC,cAChCjN,KAAA,CAAClB,IAAI,CAAC8O,OAAO,EACXI,EAAE,CAAC,QAAQ,CACXH,KAAK,CAAE1L,WAAW,CAACK,OAAQ,CAC3BsL,QAAQ,CAAGhE,CAAC,EACV1H,cAAc,CAAC,CAAE,GAAGD,WAAW,CAAEK,OAAO,CAAEsH,CAAC,CAACwB,MAAM,CAACuC,KAAM,CAAC,CAC3D,CACDE,QAAQ,MAAAd,QAAA,eAER/M,IAAA,WAAQ2N,KAAK,CAAC,EAAE,CAAAZ,QAAA,CAAC,gBAAc,CAAQ,CAAC,CACvCvM,QAAQ,CAACiH,GAAG,CAAEsG,GAAG,eAChB/N,IAAA,WAAkB2N,KAAK,CAAEI,GAAI,CAAAhB,QAAA,CAC1BgB,GAAG,EADOA,GAEL,CACT,CAAC,EACU,CAAC,EACL,CAAC,CACV,CAAC,EACH,CAAC,cACN/N,IAAA,CAACnB,MAAM,EAACiO,SAAS,CAAC,YAAY,CAAC3H,IAAI,CAAC,QAAQ,CAAA4H,QAAA,CACzCxK,cAAc,CAAG,iBAAiB,CAAG,cAAc,CAC9C,CAAC,EACL,CAAC,EACE,CAAC,CACR,CAAC,CACJ,CAAC,cACNvC,IAAA,CAACd,GAAG,EAACoO,QAAQ,CAAC,WAAW,CAAC5J,KAAK,CAAC,WAAW,CAAAqJ,QAAA,cACzC/M,IAAA,CAAChB,IAAI,EAAA+N,QAAA,cACHjN,KAAA,CAACd,IAAI,CAACuO,IAAI,EAAAR,QAAA,eACR/M,IAAA,CAAChB,IAAI,CAACU,KAAK,EAAAqN,QAAA,CAAC,sBAAoB,CAAY,CAAC,CAC5C/F,MAAM,CAACM,IAAI,CAAC3E,SAAS,CAAC,CAAC0C,MAAM,CAAG,CAAC,eAChCrF,IAAA,CAACZ,GAAG,EACF+E,IAAI,CAAEwC,aAAc,CACpB8H,OAAO,CAAE,CACPC,UAAU,CAAE,IAAI,CAChBC,OAAO,CAAE,CACPC,MAAM,CAAE,CAAEC,QAAQ,CAAE,KAAM,CAAC,CAC3BnL,KAAK,CAAE,CAAEoL,OAAO,CAAE,IAAI,CAAEC,IAAI,CAAE,6BAA8B,CAC9D,CACF,CAAE,CACH,CACF,EACQ,CAAC,CACR,CAAC,CACJ,CAAC,cACN/O,IAAA,CAACd,GAAG,EAACoO,QAAQ,CAAC,eAAe,CAAC5J,KAAK,CAAC,eAAe,CAAAqJ,QAAA,cACjD/M,IAAA,CAAChB,IAAI,EAAA+N,QAAA,cACHjN,KAAA,CAACd,IAAI,CAACuO,IAAI,EAAAR,QAAA,eACR/M,IAAA,CAAChB,IAAI,CAACU,KAAK,EAAAqN,QAAA,CAAC,mBAAiB,CAAY,CAAC,cAC1CjN,KAAA,CAAClB,IAAI,EAAC2P,QAAQ,CAAE5C,wBAAyB,CAAAoB,QAAA,eACvCjN,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,YAAY,CAAAC,QAAA,eAChC/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,OAAK,CAAY,CAAC,cAC9B/M,IAAA,CAACpB,IAAI,CAAC8O,OAAO,EACXvI,IAAI,CAAC,MAAM,CACXwI,KAAK,CAAEnK,eAAe,CAACE,KAAM,CAC7BkK,QAAQ,CAAGhE,CAAC,EACVnG,kBAAkB,CAAC,CAAE,GAAGD,eAAe,CAAEE,KAAK,CAAEkG,CAAC,CAACwB,MAAM,CAACuC,KAAM,CAAC,CACjE,CACDa,WAAW,CAAC,0BAA0B,CACtCX,QAAQ,MACT,CAAC,EACQ,CAAC,cACb/N,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,YAAY,CAAAC,QAAA,eAChC/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,SAAO,CAAY,CAAC,cAChC/M,IAAA,CAACpB,IAAI,CAAC8O,OAAO,EACXI,EAAE,CAAC,UAAU,CACbkB,IAAI,CAAE,CAAE,CACRrB,KAAK,CAAEnK,eAAe,CAACG,OAAQ,CAC/BiK,QAAQ,CAAGhE,CAAC,EACVnG,kBAAkB,CAAC,CAAE,GAAGD,eAAe,CAAEG,OAAO,CAAEiG,CAAC,CAACwB,MAAM,CAACuC,KAAM,CAAC,CACnE,CACDa,WAAW,CAAC,4BAA4B,CACxCX,QAAQ,MACT,CAAC,EACQ,CAAC,cACb7N,IAAA,CAACnB,MAAM,EAACiO,SAAS,CAAC,YAAY,CAAC3H,IAAI,CAAC,QAAQ,CAAA4H,QAAA,CAAC,mBAE7C,CAAQ,CAAC,EACL,CAAC,cACP/M,IAAA,OAAI8M,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,sBAAoB,CAAI,CAAC,CAC7CzJ,aAAa,CAAC+B,MAAM,CAAG,CAAC,cACvBvF,KAAA,CAAChB,KAAK,EAACmP,OAAO,MAACC,QAAQ,MAACC,KAAK,MAAApB,QAAA,eAC3B/M,IAAA,UAAA+M,QAAA,cACEjN,KAAA,OAAAiN,QAAA,eACE/M,IAAA,OAAA+M,QAAA,CAAI,OAAK,CAAI,CAAC,cACd/M,IAAA,OAAA+M,QAAA,CAAI,SAAO,CAAI,CAAC,cAChB/M,IAAA,OAAA+M,QAAA,CAAI,MAAI,CAAI,CAAC,EACX,CAAC,CACA,CAAC,cACR/M,IAAA,UAAA+M,QAAA,CACGzJ,aAAa,CAACmE,GAAG,CAAEwH,GAAG,eACrBnP,KAAA,OAAAiN,QAAA,eACE/M,IAAA,OAAA+M,QAAA,CAAKkC,GAAG,CAACvL,KAAK,CAAK,CAAC,cACpB1D,IAAA,OAAA+M,QAAA,CAAKkC,GAAG,CAACtL,OAAO,CAAK,CAAC,cACtB3D,IAAA,OAAA+M,QAAA,CAAK,GAAI,CAAA/L,IAAI,CAACiO,GAAG,CAACC,SAAS,CAAC,CAAClB,kBAAkB,CAAC,CAAC,CAAK,CAAC,GAHhDiB,GAAG,CAACjH,GAIT,CACL,CAAC,CACG,CAAC,EACH,CAAC,cAERhI,IAAA,MAAA+M,QAAA,CAAG,6BAA2B,CAAG,CAClC,EACQ,CAAC,CACR,CAAC,CACJ,CAAC,EACF,CAAC,cACPjN,KAAA,CAACf,KAAK,EAACoQ,IAAI,CAAEtN,SAAU,CAACuN,MAAM,CAAEA,CAAA,GAAMtN,YAAY,CAAC,KAAK,CAAE,CAAAiL,QAAA,eACxD/M,IAAA,CAACjB,KAAK,CAACsQ,MAAM,EAACC,WAAW,MAAAvC,QAAA,cACvB/M,IAAA,CAACjB,KAAK,CAACW,KAAK,EAAAqN,QAAA,CAAEpL,OAAO,CAAC4N,QAAQ,CAAC,cAAc,CAAC,CAAG,SAAS,CAAG,OAAO,CAAc,CAAC,CACvE,CAAC,cACfvP,IAAA,CAACjB,KAAK,CAACwO,IAAI,EAAAR,QAAA,CAAEpL,OAAO,CAAa,CAAC,cAClC3B,IAAA,CAACjB,KAAK,CAACyQ,MAAM,EAAAzC,QAAA,cACX/M,IAAA,CAACnB,MAAM,EAACiO,SAAS,CAAC,YAAY,CAACG,OAAO,CAAEA,CAAA,GAAMnL,YAAY,CAAC,KAAK,CAAE,CAAAiL,QAAA,CAAC,OAEnE,CAAQ,CAAC,CACG,CAAC,EACV,CAAC,cACRjN,KAAA,CAACf,KAAK,EAACoQ,IAAI,CAAE/L,gBAAiB,CAACgM,MAAM,CAAEA,CAAA,GAAM/L,mBAAmB,CAAC,KAAK,CAAE,CAAA0J,QAAA,eACtE/M,IAAA,CAACjB,KAAK,CAACsQ,MAAM,EAACC,WAAW,MAAAvC,QAAA,cACvB/M,IAAA,CAACjB,KAAK,CAACW,KAAK,EAAAqN,QAAA,CAAC,cAAY,CAAa,CAAC,CAC3B,CAAC,cACf/M,IAAA,CAACjB,KAAK,CAACwO,IAAI,EAAAR,QAAA,cACTjN,KAAA,CAAClB,IAAI,EAAC2P,QAAQ,CAAE5D,mBAAoB,CAAAoC,QAAA,eAClCjN,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1B/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,MAAI,CAAY,CAAC,cAC7B/M,IAAA,CAACpB,IAAI,CAAC8O,OAAO,EACXvI,IAAI,CAAC,MAAM,CACXwI,KAAK,CAAE5K,OAAO,CAACE,IAAK,CACpB2K,QAAQ,CAAGhE,CAAC,EAAK5G,UAAU,CAAC,CAAE,GAAGD,OAAO,CAAEE,IAAI,CAAE2G,CAAC,CAACwB,MAAM,CAACuC,KAAM,CAAC,CAAE,CAClEE,QAAQ,MACT,CAAC,EACQ,CAAC,cACb/N,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1B/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,OAAK,CAAY,CAAC,cAC9B/M,IAAA,CAACpB,IAAI,CAAC8O,OAAO,EACXvI,IAAI,CAAC,OAAO,CACZwI,KAAK,CAAE5K,OAAO,CAACG,KAAM,CACrB0K,QAAQ,CAAGhE,CAAC,EAAK5G,UAAU,CAAC,CAAE,GAAGD,OAAO,CAAEG,KAAK,CAAE0G,CAAC,CAACwB,MAAM,CAACuC,KAAM,CAAC,CAAE,CACnEE,QAAQ,MACT,CAAC,EACQ,CAAC,cACb/N,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1B/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,iBAAe,CAAY,CAAC,cACxC/M,IAAA,CAACpB,IAAI,CAAC8O,OAAO,EACXvI,IAAI,CAAC,MAAM,CACXsK,MAAM,CAAC,SAAS,CAChB7B,QAAQ,CAAEzC,0BAA2B,CACtC,CAAC,CACDpI,OAAO,CAACI,cAAc,eACrBnD,IAAA,QACE0P,GAAG,CAAE3M,OAAO,CAACI,cAAe,CAC5BwM,GAAG,CAAC,SAAS,CACb7C,SAAS,CAAC,yBAAyB,CACnC8C,KAAK,CAAE,CAAEC,QAAQ,CAAE,OAAO,CAAEC,SAAS,CAAE,MAAO,CAAE,CACjD,CACF,EACS,CAAC,cACb9P,IAAA,CAACnB,MAAM,EAACiO,SAAS,CAAC,YAAY,CAAC3H,IAAI,CAAC,QAAQ,CAAA4H,QAAA,CAAC,cAE7C,CAAQ,CAAC,EACL,CAAC,CACG,CAAC,EACR,CAAC,cACRjN,KAAA,CAACf,KAAK,EAACoQ,IAAI,CAAErL,eAAgB,CAACsL,MAAM,CAAEA,CAAA,GAAMrL,kBAAkB,CAAC,KAAK,CAAE,CAAAgJ,QAAA,eACpE/M,IAAA,CAACjB,KAAK,CAACsQ,MAAM,EAACC,WAAW,MAAAvC,QAAA,cACvB/M,IAAA,CAACjB,KAAK,CAACW,KAAK,EAAAqN,QAAA,CAAC,uBAAqB,CAAa,CAAC,CACpC,CAAC,cACf/M,IAAA,CAACjB,KAAK,CAACwO,IAAI,EAAAR,QAAA,cACTjN,KAAA,CAAClB,IAAI,EAAC2P,QAAQ,CAAElC,YAAa,CAAAU,QAAA,eAC3BjN,KAAA,CAAClB,IAAI,CAAC4O,KAAK,EAACV,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1B/M,IAAA,CAACpB,IAAI,CAAC6O,KAAK,EAAAV,QAAA,CAAC,UAAQ,CAAY,CAAC,cACjC/M,IAAA,CAACpB,IAAI,CAAC8O,OAAO,EACXvI,IAAI,CAAC,MAAM,CACXsK,MAAM,CAAC,MAAM,CACb7B,QAAQ,CAAEf,gBAAiB,CAC3BgB,QAAQ,MACT,CAAC,cACF7N,IAAA,CAACpB,IAAI,CAACmR,IAAI,EAACjD,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,iFAElC,CAAW,CAAC,EACF,CAAC,cACb/M,IAAA,CAACnB,MAAM,EAACsG,IAAI,CAAC,QAAQ,CAAC2H,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,QAE9C,CAAQ,CAAC,EACL,CAAC,CACG,CAAC,EACR,CAAC,EACL,CAAC,CAEV,CAEA,cAAe,CAAA3M,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}